const Web3 = require('web3');
var web3 = new Web3('ws://52.147.196.54:8545/');
const { BN } = require("@openzeppelin/test-helpers");
const eighteenDecimals = new BN(10).pow(new BN(18));
const getAccounts = async () => {
    await web3.eth.getAccounts(console.log);
}

const getBalance = async (account) => {
    const balance = await web3.eth.getBalance(account);
    console.log("ETH left is: " + balance);
}

// Example code showing how to assign erc20 tokens to test accounts
(async () => {
    const bankjson = require("../../build/contracts/Bank.json");
    const accountsjson = require("../../build/contracts/Accounts.json");
    const savingAccountjson = require("../../build/contracts/SavingAccount.json");
    const erc20json = require("../../build/contracts/MockERC20.json");

    // Please replace all the addresses here to the addresses generated by your deployement
    const account1 = "0xaA817b67d605f45e7759031303b04422734834eD";
    const account2 = "0xBC32e33Ec5e34c7963E3676d35268855eB578475";
    const bankAddress = "0xCEe8ce58a5E021292Ef24616F8aae55b76318997";
    const accountAddress = "0xBEBCe4Ee8755347FFcFa00F5501Ae5F09df50Df9";
    const savingAccountAddress = "0xbDA64e5C0d38f62714ab49a62DffE2b21a0F3a66";
    const daiAddress = "0x5C81c32BDD7e251323833d984ABdE18ca9191291";

    const bankContract = await new web3.eth.Contract(bankjson["abi"], bankAddress);
    const accountContract = await new web3.eth.Contract(accountsjson["abi"], accountAddress);
    const savingAccountContract = await new web3.eth.Contract(savingAccountjson["abi"], savingAccountAddress);
    const daiErc20 = await new web3.eth.Contract(erc20json["abi"], daiAddress);

    // Transfer dai to accounts
    console.log("Tranferring one dai to account 2.");
    await daiErc20.methods.transfer(account2, eighteenDecimals).send({ from: account1, gas: "200000" });
    console.log("Approving saving account to receive dai from account 2.");
    await daiErc20.methods.approve(savingAccountAddress, eighteenDecimals).send({ from: account2, gas: "200000" });
    console.log("Account2 is depositing dai to saving account");
    await savingAccountContract.methods.deposit(daiAddress, eighteenDecimals).send({ from: account2, gas: "200000" });

    await getBalance(account2);
    process.exit(0);
})();
