{
  "contractName": "ComptrollerScenario2",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "action",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "pauseState",
          "type": "bool"
        }
      ],
      "name": "ActionPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "action",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "pauseState",
          "type": "bool"
        }
      ],
      "name": "ActionPaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newSpeed",
          "type": "uint256"
        }
      ],
      "name": "CompSpeedUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compBorrowIndex",
          "type": "uint256"
        }
      ],
      "name": "DistributedBorrowerComp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "supplier",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compDelta",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "compSupplyIndex",
          "type": "uint256"
        }
      ],
      "name": "DistributedSupplierComp",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "error",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "info",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "detail",
          "type": "uint256"
        }
      ],
      "name": "Failure",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "isComped",
          "type": "bool"
        }
      ],
      "name": "MarketComped",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MarketEntered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MarketExited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "MarketListed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldCloseFactorMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCloseFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewCloseFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldCollateralFactorMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCollateralFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewCollateralFactor",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldCompRate",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newCompRate",
          "type": "uint256"
        }
      ],
      "name": "NewCompRate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldLiquidationIncentiveMantissa",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newLiquidationIncentiveMantissa",
          "type": "uint256"
        }
      ],
      "name": "NewLiquidationIncentive",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "oldMaxAssets",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newMaxAssets",
          "type": "uint256"
        }
      ],
      "name": "NewMaxAssets",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldPauseGuardian",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newPauseGuardian",
          "type": "address"
        }
      ],
      "name": "NewPauseGuardian",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract PriceOracle",
          "name": "oldPriceOracle",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract PriceOracle",
          "name": "newPriceOracle",
          "type": "address"
        }
      ],
      "name": "NewPriceOracle",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "cTokens",
          "type": "address[]"
        }
      ],
      "name": "_addCompMarkets",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract Unitroller",
          "name": "unitroller",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "compRate_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "compMarketsToAdd",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "otherMarketsToAdd",
          "type": "address[]"
        }
      ],
      "name": "_become",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "compRate_",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "compMarketsToAdd",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "otherMarketsToAdd",
          "type": "address[]"
        }
      ],
      "name": "_becomeG3",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_borrowGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "_dropCompMarket",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "_mintGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "_setBorrowPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newCloseFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setCloseFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "newCollateralFactorMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setCollateralFactor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "compRate_",
          "type": "uint256"
        }
      ],
      "name": "_setCompRate",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newLiquidationIncentiveMantissa",
          "type": "uint256"
        }
      ],
      "name": "_setLiquidationIncentive",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxAssets",
          "type": "uint256"
        }
      ],
      "name": "_setMaxAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "_setMintPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newPauseGuardian",
          "type": "address"
        }
      ],
      "name": "_setPauseGuardian",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract PriceOracle",
          "name": "newOracle",
          "type": "address"
        }
      ],
      "name": "_setPriceOracle",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "_setSeizePaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "_setTransferPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "_supportMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "accountAssets",
      "outputs": [
        {
          "internalType": "contract CToken",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "admin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allMarkets",
      "outputs": [
        {
          "internalType": "contract CToken",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "blockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrowAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "borrowGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "borrowVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "checkMembership",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        },
        {
          "internalType": "contract CToken[]",
          "name": "cTokens",
          "type": "address[]"
        }
      ],
      "name": "claimComp",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "holders",
          "type": "address[]"
        },
        {
          "internalType": "contract CToken[]",
          "name": "cTokens",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "borrowers",
          "type": "bool"
        },
        {
          "internalType": "bool",
          "name": "suppliers",
          "type": "bool"
        }
      ],
      "name": "claimComp",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "holder",
          "type": "address"
        }
      ],
      "name": "claimComp",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closeFactorMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compAccrued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compBorrowState",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "index",
          "type": "uint224"
        },
        {
          "internalType": "uint32",
          "name": "block",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compBorrowerIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "compClaimThreshold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "compInitialIndex",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "",
          "type": "uint224"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "compRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compSpeeds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compSupplierIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "compSupplyState",
      "outputs": [
        {
          "internalType": "uint224",
          "name": "index",
          "type": "uint224"
        },
        {
          "internalType": "uint32",
          "name": "block",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "comptrollerImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address[]",
          "name": "cTokens",
          "type": "address[]"
        }
      ],
      "name": "enterMarkets",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenAddress",
          "type": "address"
        }
      ],
      "name": "exitMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getAllMarkets",
      "outputs": [
        {
          "internalType": "contract CToken[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAssetsIn",
      "outputs": [
        {
          "internalType": "contract CToken[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCompAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenModify",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowAmount",
          "type": "uint256"
        }
      ],
      "name": "getHypotheticalAccountLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isComptroller",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenBorrowed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        }
      ],
      "name": "liquidateBorrowAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenBorrowed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "actualRepayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "liquidateBorrowVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenBorrowed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "actualRepayAmount",
          "type": "uint256"
        }
      ],
      "name": "liquidateCalculateSeizeTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "liquidationIncentiveMantissa",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "markets",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isListed",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "collateralFactorMantissa",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "isComped",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxAssets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "mintAmount",
          "type": "uint256"
        }
      ],
      "name": "mintAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "mintGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "minter",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "actualMintAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mintTokens",
          "type": "uint256"
        }
      ],
      "name": "mintVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "oracle",
      "outputs": [
        {
          "internalType": "contract PriceOracle",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pauseGuardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "pendingComptrollerImplementation",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeemAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "redeemer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "redeemAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "redeemTokens",
          "type": "uint256"
        }
      ],
      "name": "redeemVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "refreshCompSpeeds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "repayAmount",
          "type": "uint256"
        }
      ],
      "name": "repayBorrowAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "payer",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "actualRepayAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "borrowerIndex",
          "type": "uint256"
        }
      ],
      "name": "repayBorrowVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenBorrowed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "seizeAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "seizeGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cTokenCollateral",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "cTokenBorrowed",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "liquidator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "seizeTokens",
          "type": "uint256"
        }
      ],
      "name": "seizeVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "transferTokens",
          "type": "uint256"
        }
      ],
      "name": "transferAllowed",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "transferGuardianPaused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "cToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "src",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dst",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "transferTokens",
          "type": "uint256"
        }
      ],
      "name": "transferVerify",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blocks",
          "type": "uint256"
        }
      ],
      "name": "fastForward",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        }
      ],
      "name": "setBlockNumber",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "membershipLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "contract CToken",
          "name": "cToken",
          "type": "address"
        }
      ],
      "name": "unlist",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.14+commit.01f1aaa4\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"pauseState\",\"type\":\"bool\"}],\"name\":\"ActionPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"action\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"pauseState\",\"type\":\"bool\"}],\"name\":\"ActionPaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newSpeed\",\"type\":\"uint256\"}],\"name\":\"CompSpeedUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"DistributedBorrowerComp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"supplier\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compDelta\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"compSupplyIndex\",\"type\":\"uint256\"}],\"name\":\"DistributedSupplierComp\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"error\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"info\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"detail\",\"type\":\"uint256\"}],\"name\":\"Failure\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isComped\",\"type\":\"bool\"}],\"name\":\"MarketComped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MarketEntered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MarketExited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"MarketListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCloseFactorMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCloseFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"NewCloseFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCollateralFactorMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCollateralFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"NewCollateralFactor\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldCompRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newCompRate\",\"type\":\"uint256\"}],\"name\":\"NewCompRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldLiquidationIncentiveMantissa\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newLiquidationIncentiveMantissa\",\"type\":\"uint256\"}],\"name\":\"NewLiquidationIncentive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldMaxAssets\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newMaxAssets\",\"type\":\"uint256\"}],\"name\":\"NewMaxAssets\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldPauseGuardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newPauseGuardian\",\"type\":\"address\"}],\"name\":\"NewPauseGuardian\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract PriceOracle\",\"name\":\"oldPriceOracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract PriceOracle\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"NewPriceOracle\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"name\":\"_addCompMarkets\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract Unitroller\",\"name\":\"unitroller\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"compRate_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"compMarketsToAdd\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"otherMarketsToAdd\",\"type\":\"address[]\"}],\"name\":\"_become\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"compRate_\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"compMarketsToAdd\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"otherMarketsToAdd\",\"type\":\"address[]\"}],\"name\":\"_becomeG3\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_borrowGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"_dropCompMarket\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_mintGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"_setBorrowPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newCloseFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"_setCloseFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newCollateralFactorMantissa\",\"type\":\"uint256\"}],\"name\":\"_setCollateralFactor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"compRate_\",\"type\":\"uint256\"}],\"name\":\"_setCompRate\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newLiquidationIncentiveMantissa\",\"type\":\"uint256\"}],\"name\":\"_setLiquidationIncentive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxAssets\",\"type\":\"uint256\"}],\"name\":\"_setMaxAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"_setMintPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPauseGuardian\",\"type\":\"address\"}],\"name\":\"_setPauseGuardian\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract PriceOracle\",\"name\":\"newOracle\",\"type\":\"address\"}],\"name\":\"_setPriceOracle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"_setSeizePaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"_setTransferPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"_supportMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"accountAssets\",\"outputs\":[{\"internalType\":\"contract CToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allMarkets\",\"outputs\":[{\"internalType\":\"contract CToken\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"blockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrowAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"borrowGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"borrowVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"checkMembership\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"contract CToken[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"name\":\"claimComp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"holders\",\"type\":\"address[]\"},{\"internalType\":\"contract CToken[]\",\"name\":\"cTokens\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"borrowers\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"suppliers\",\"type\":\"bool\"}],\"name\":\"claimComp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"}],\"name\":\"claimComp\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"closeFactorMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compAccrued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compBorrowState\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"index\",\"type\":\"uint224\"},{\"internalType\":\"uint32\",\"name\":\"block\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compBorrowerIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"compClaimThreshold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"compInitialIndex\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"\",\"type\":\"uint224\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"compRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compSpeeds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compSupplierIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"compSupplyState\",\"outputs\":[{\"internalType\":\"uint224\",\"name\":\"index\",\"type\":\"uint224\"},{\"internalType\":\"uint32\",\"name\":\"block\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"comptrollerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"cTokens\",\"type\":\"address[]\"}],\"name\":\"enterMarkets\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenAddress\",\"type\":\"address\"}],\"name\":\"exitMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blocks\",\"type\":\"uint256\"}],\"name\":\"fastForward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAccountLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAllMarkets\",\"outputs\":[{\"internalType\":\"contract CToken[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getAssetsIn\",\"outputs\":[{\"internalType\":\"contract CToken[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCompAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenModify\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"getHypotheticalAccountLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isComptroller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenBorrowed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"liquidateBorrowAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenBorrowed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"actualRepayAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"liquidateBorrowVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenBorrowed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"actualRepayAmount\",\"type\":\"uint256\"}],\"name\":\"liquidateCalculateSeizeTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"liquidationIncentiveMantissa\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"markets\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isListed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"collateralFactorMantissa\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isComped\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxAssets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"membershipLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"mintAmount\",\"type\":\"uint256\"}],\"name\":\"mintAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"mintGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"actualMintAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintTokens\",\"type\":\"uint256\"}],\"name\":\"mintVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"oracle\",\"outputs\":[{\"internalType\":\"contract PriceOracle\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pauseGuardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"pendingComptrollerImplementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeemAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"redeemer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"redeemAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"redeemTokens\",\"type\":\"uint256\"}],\"name\":\"redeemVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"refreshCompSpeeds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"}],\"name\":\"repayBorrowAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"actualRepayAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowerIndex\",\"type\":\"uint256\"}],\"name\":\"repayBorrowVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenBorrowed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"seizeAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"seizeGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cTokenCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cTokenBorrowed\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"seizeTokens\",\"type\":\"uint256\"}],\"name\":\"seizeVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"setBlockNumber\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferTokens\",\"type\":\"uint256\"}],\"name\":\"transferAllowed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"transferGuardianPaused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"cToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"src\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dst\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transferTokens\",\"type\":\"uint256\"}],\"name\":\"transferVerify\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"contract CToken\",\"name\":\"cToken\",\"type\":\"address\"}],\"name\":\"unlist\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"_addCompMarkets(address[])\":{\"params\":{\"cTokens\":\"The addresses of the markets to add\"}},\"_dropCompMarket(address)\":{\"params\":{\"cToken\":\"The address of the market to drop\"}},\"_setCloseFactor(uint256)\":{\"details\":\"Admin function to set closeFactor\",\"params\":{\"newCloseFactorMantissa\":\"New close factor, scaled by 1e18\"},\"return\":\"uint 0=success, otherwise a failure. (See ErrorReporter for details)\"},\"_setCollateralFactor(address,uint256)\":{\"details\":\"Admin function to set per-market collateralFactor\",\"params\":{\"cToken\":\"The market to set the factor on\",\"newCollateralFactorMantissa\":\"The new collateral factor, scaled by 1e18\"},\"return\":\"uint 0=success, otherwise a failure. (See ErrorReporter for details)\"},\"_setCompRate(uint256)\":{\"params\":{\"compRate_\":\"The amount of COMP wei per block to distribute\"}},\"_setLiquidationIncentive(uint256)\":{\"details\":\"Admin function to set liquidationIncentive\",\"params\":{\"newLiquidationIncentiveMantissa\":\"New liquidationIncentive scaled by 1e18\"},\"return\":\"uint 0=success, otherwise a failure. (See ErrorReporter for details)\"},\"_setMaxAssets(uint256)\":{\"details\":\"Admin function to set maxAssets\",\"params\":{\"newMaxAssets\":\"New max assets\"},\"return\":\"uint 0=success, otherwise a failure. (See ErrorReporter for details)\"},\"_setPauseGuardian(address)\":{\"params\":{\"newPauseGuardian\":\"The address of the new Pause Guardian\"},\"return\":\"uint 0=success, otherwise a failure. (See enum Error for details)\"},\"_setPriceOracle(address)\":{\"details\":\"Admin function to set a new price oracle\",\"return\":\"uint 0=success, otherwise a failure (see ErrorReporter.sol for details)\"},\"_supportMarket(address)\":{\"details\":\"Admin function to set isListed and add support for the market\",\"params\":{\"cToken\":\"The address of the market (token) to list\"},\"return\":\"uint 0=success, otherwise a failure. (See enum Error for details)\"},\"borrowAllowed(address,address,uint256)\":{\"params\":{\"borrowAmount\":\"The amount of underlying the account would borrow\",\"borrower\":\"The account which would borrow the asset\",\"cToken\":\"The market to verify the borrow against\"},\"return\":\"0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\"},\"borrowVerify(address,address,uint256)\":{\"params\":{\"borrowAmount\":\"The amount of the underlying asset requested to borrow\",\"borrower\":\"The address borrowing the underlying\",\"cToken\":\"Asset whose underlying is being borrowed\"}},\"checkMembership(address,address)\":{\"params\":{\"account\":\"The address of the account to check\",\"cToken\":\"The cToken to check\"},\"return\":\"True if the account is in the asset, otherwise false.\"},\"claimComp(address)\":{\"params\":{\"holder\":\"The address to claim COMP for\"}},\"claimComp(address,address[])\":{\"params\":{\"cTokens\":\"The list of markets to claim COMP in\",\"holder\":\"The address to claim COMP for\"}},\"claimComp(address[],address[],bool,bool)\":{\"params\":{\"borrowers\":\"Whether or not to claim COMP earned by borrowing\",\"cTokens\":\"The list of markets to claim COMP in\",\"holders\":\"The addresses to claim COMP for\",\"suppliers\":\"Whether or not to claim COMP earned by supplying\"}},\"enterMarkets(address[])\":{\"params\":{\"cTokens\":\"The list of addresses of the cToken markets to be enabled\"},\"return\":\"Success indicator for whether each corresponding market was entered\"},\"exitMarket(address)\":{\"details\":\"Sender must not have an outstanding borrow balance in the asset, or be providing neccessary collateral for an outstanding borrow.\",\"params\":{\"cTokenAddress\":\"The address of the asset to be removed\"},\"return\":\"Whether or not the account successfully exited the market\"},\"getAccountLiquidity(address)\":{\"return\":\"(possible error code (semi-opaque), account liquidity in excess of collateral requirements,         account shortfall below collateral requirements)\"},\"getAllMarkets()\":{\"details\":\"The automatic getter may be used to access an individual market.\",\"return\":\"The list of market addresses\"},\"getAssetsIn(address)\":{\"params\":{\"account\":\"The address of the account to pull assets for\"},\"return\":\"A dynamic list with the assets the account has entered\"},\"getCompAddress()\":{\"return\":\"The address of COMP\"},\"getHypotheticalAccountLiquidity(address,address,uint256,uint256)\":{\"params\":{\"account\":\"The account to determine liquidity for\",\"borrowAmount\":\"The amount of underlying to hypothetically borrow\",\"cTokenModify\":\"The market to hypothetically redeem/borrow in\",\"redeemTokens\":\"The number of tokens to hypothetically redeem\"},\"return\":\"(possible error code (semi-opaque), hypothetical account liquidity in excess of collateral requirements,         hypothetical account shortfall below collateral requirements)\"},\"liquidateBorrowAllowed(address,address,address,address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"cTokenBorrowed\":\"Asset which was borrowed by the borrower\",\"cTokenCollateral\":\"Asset which was used as collateral and will be seized\",\"liquidator\":\"The address repaying the borrow and seizing the collateral\",\"repayAmount\":\"The amount of underlying being repaid\"}},\"liquidateBorrowVerify(address,address,address,address,uint256,uint256)\":{\"params\":{\"actualRepayAmount\":\"The amount of underlying being repaid\",\"borrower\":\"The address of the borrower\",\"cTokenBorrowed\":\"Asset which was borrowed by the borrower\",\"cTokenCollateral\":\"Asset which was used as collateral and will be seized\",\"liquidator\":\"The address repaying the borrow and seizing the collateral\"}},\"liquidateCalculateSeizeTokens(address,address,uint256)\":{\"details\":\"Used in liquidation (called in cToken.liquidateBorrowFresh)\",\"params\":{\"actualRepayAmount\":\"The amount of cTokenBorrowed underlying to convert into cTokenCollateral tokens\",\"cTokenBorrowed\":\"The address of the borrowed cToken\",\"cTokenCollateral\":\"The address of the collateral cToken\"},\"return\":\"(errorCode, number of cTokenCollateral tokens to be seized in a liquidation)\"},\"mintAllowed(address,address,uint256)\":{\"params\":{\"cToken\":\"The market to verify the mint against\",\"mintAmount\":\"The amount of underlying being supplied to the market in exchange for tokens\",\"minter\":\"The account which would get the minted tokens\"},\"return\":\"0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\"},\"mintVerify(address,address,uint256,uint256)\":{\"params\":{\"actualMintAmount\":\"The amount of the underlying asset being minted\",\"cToken\":\"Asset being minted\",\"mintTokens\":\"The number of tokens being minted\",\"minter\":\"The address minting the tokens\"}},\"redeemAllowed(address,address,uint256)\":{\"params\":{\"cToken\":\"The market to verify the redeem against\",\"redeemTokens\":\"The number of cTokens to exchange for the underlying asset in the market\",\"redeemer\":\"The account which would redeem the tokens\"},\"return\":\"0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\"},\"redeemVerify(address,address,uint256,uint256)\":{\"params\":{\"cToken\":\"Asset being redeemed\",\"redeemAmount\":\"The amount of the underlying asset being redeemed\",\"redeemTokens\":\"The number of tokens being redeemed\",\"redeemer\":\"The address redeeming the tokens\"}},\"repayBorrowAllowed(address,address,address,uint256)\":{\"params\":{\"borrower\":\"The account which would borrowed the asset\",\"cToken\":\"The market to verify the repay against\",\"payer\":\"The account which would repay the asset\",\"repayAmount\":\"The amount of the underlying asset the account would repay\"},\"return\":\"0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\"},\"repayBorrowVerify(address,address,address,uint256,uint256)\":{\"params\":{\"actualRepayAmount\":\"The amount of underlying being repaid\",\"borrower\":\"The address of the borrower\",\"cToken\":\"Asset being repaid\",\"payer\":\"The address repaying the borrow\"}},\"seizeAllowed(address,address,address,address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"cTokenBorrowed\":\"Asset which was borrowed by the borrower\",\"cTokenCollateral\":\"Asset which was used as collateral and will be seized\",\"liquidator\":\"The address repaying the borrow and seizing the collateral\",\"seizeTokens\":\"The number of collateral tokens to seize\"}},\"seizeVerify(address,address,address,address,uint256)\":{\"params\":{\"borrower\":\"The address of the borrower\",\"cTokenBorrowed\":\"Asset which was borrowed by the borrower\",\"cTokenCollateral\":\"Asset which was used as collateral and will be seized\",\"liquidator\":\"The address repaying the borrow and seizing the collateral\",\"seizeTokens\":\"The number of collateral tokens to seize\"}},\"transferAllowed(address,address,address,uint256)\":{\"params\":{\"cToken\":\"The market to verify the transfer against\",\"dst\":\"The account which receives the tokens\",\"src\":\"The account which sources the tokens\",\"transferTokens\":\"The number of cTokens to transfer\"},\"return\":\"0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)\"},\"transferVerify(address,address,address,uint256)\":{\"params\":{\"cToken\":\"Asset being transferred\",\"dst\":\"The account which receives the tokens\",\"src\":\"The account which sources the tokens\",\"transferTokens\":\"The number of cTokens to transfer\"}}}},\"userdoc\":{\"methods\":{\"_addCompMarkets(address[])\":{\"notice\":\"Add markets to compMarkets, allowing them to earn COMP in the flywheel\"},\"_dropCompMarket(address)\":{\"notice\":\"Remove a market from compMarkets, preventing it from earning COMP in the flywheel\"},\"_setCloseFactor(uint256)\":{\"notice\":\"Sets the closeFactor used when liquidating borrows\"},\"_setCollateralFactor(address,uint256)\":{\"notice\":\"Sets the collateralFactor for a market\"},\"_setCompRate(uint256)\":{\"notice\":\"Set the amount of COMP distributed per block\"},\"_setLiquidationIncentive(uint256)\":{\"notice\":\"Sets liquidationIncentive\"},\"_setMaxAssets(uint256)\":{\"notice\":\"Sets maxAssets which controls how many markets can be entered\"},\"_setPauseGuardian(address)\":{\"notice\":\"Admin function to change the Pause Guardian\"},\"_setPriceOracle(address)\":{\"notice\":\"Sets a new price oracle for the comptroller\"},\"_supportMarket(address)\":{\"notice\":\"Add the market to the markets mapping and set it as listed\"},\"borrowAllowed(address,address,uint256)\":{\"notice\":\"Checks if the account should be allowed to borrow the underlying asset of the given market\"},\"borrowVerify(address,address,uint256)\":{\"notice\":\"Validates borrow and reverts on rejection. May emit logs.\"},\"checkMembership(address,address)\":{\"notice\":\"Returns whether the given account is entered in the given asset\"},\"claimComp(address)\":{\"notice\":\"Claim all the comp accrued by holder in all markets\"},\"claimComp(address,address[])\":{\"notice\":\"Claim all the comp accrued by holder in the specified markets\"},\"claimComp(address[],address[],bool,bool)\":{\"notice\":\"Claim all comp accrued by the holders\"},\"enterMarkets(address[])\":{\"notice\":\"Add assets to be included in account liquidity calculation\"},\"exitMarket(address)\":{\"notice\":\"Removes asset from sender's account liquidity calculation\"},\"getAccountLiquidity(address)\":{\"notice\":\"Determine the current account liquidity wrt collateral requirements\"},\"getAllMarkets()\":{\"notice\":\"Return all of the markets\"},\"getAssetsIn(address)\":{\"notice\":\"Returns the assets an account has entered\"},\"getCompAddress()\":{\"notice\":\"Return the address of the COMP token\"},\"getHypotheticalAccountLiquidity(address,address,uint256,uint256)\":{\"notice\":\"Determine what the account liquidity would be if the given amounts were redeemed/borrowed\"},\"liquidateBorrowAllowed(address,address,address,address,uint256)\":{\"notice\":\"Checks if the liquidation should be allowed to occur\"},\"liquidateBorrowVerify(address,address,address,address,uint256,uint256)\":{\"notice\":\"Validates liquidateBorrow and reverts on rejection. May emit logs.\"},\"liquidateCalculateSeizeTokens(address,address,uint256)\":{\"notice\":\"Calculate number of tokens of collateral asset to seize given an underlying amount\"},\"mintAllowed(address,address,uint256)\":{\"notice\":\"Checks if the account should be allowed to mint tokens in the given market\"},\"mintVerify(address,address,uint256,uint256)\":{\"notice\":\"Validates mint and reverts on rejection. May emit logs.\"},\"redeemAllowed(address,address,uint256)\":{\"notice\":\"Checks if the account should be allowed to redeem tokens in the given market\"},\"redeemVerify(address,address,uint256,uint256)\":{\"notice\":\"Validates redeem and reverts on rejection. May emit logs.\"},\"refreshCompSpeeds()\":{\"notice\":\"Recalculate and update COMP speeds for all COMP markets\"},\"repayBorrowAllowed(address,address,address,uint256)\":{\"notice\":\"Checks if the account should be allowed to repay a borrow in the given market\"},\"repayBorrowVerify(address,address,address,uint256,uint256)\":{\"notice\":\"Validates repayBorrow and reverts on rejection. May emit logs.\"},\"seizeAllowed(address,address,address,address,uint256)\":{\"notice\":\"Checks if the seizing of assets should be allowed to occur\"},\"seizeVerify(address,address,address,address,uint256)\":{\"notice\":\"Validates seize and reverts on rejection. May emit logs.\"},\"transferAllowed(address,address,address,uint256)\":{\"notice\":\"Checks if the account should be allowed to transfer tokens in the given market\"},\"transferVerify(address,address,address,uint256)\":{\"notice\":\"Validates transfer and reverts on rejection. May emit logs.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/yanyichun/project/Savings/contracts/compound/test/Contracts/ComptrollerScenario.sol\":\"ComptrollerScenario2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/yanyichun/project/Savings/contracts/compound/contracts/CToken.sol\":{\"keccak256\":\"0xedb1a648dd9c75e54ad11e90168b668c46b5a477cc9fc6b3db8f6ca10eb1b383\",\"urls\":[\"bzz-raw://a7074ab6611a93f80f666338197e54a52b4d0c3c54a9c57726f6a079019c403d\",\"dweb:/ipfs/QmbvM3LFvwneB3STPRF1xeSSWFHMZ72LqHzeUZCvUKrkYL\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/CTokenInterfaces.sol\":{\"keccak256\":\"0xa75e7675da0b651610dcc12bac58ebc761731eaae1fcbdc37cd0cced6d590879\",\"urls\":[\"bzz-raw://2b3645d95943ec329f187e11fda1a4a9000f1abbe5b773572ef5fa2e685b8d6b\",\"dweb:/ipfs/QmT9khfqFVKDvXx2oRSHFfTnVWuK27WX53jZkNaGgZAdmk\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/CarefulMath.sol\":{\"keccak256\":\"0x6bfc4ea9e9250ad42aea45bc0b7059a11d82b915851c97567c2c6b56a4635d8a\",\"urls\":[\"bzz-raw://6f385acc0e1f366561a44d8d9ce896689229db25dc6f0944aef555330991be33\",\"dweb:/ipfs/QmQeZAGxvER7BDL8mAwd35TqwK4z5Tuv2XBwLQApJ5NT6W\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/Comptroller.sol\":{\"keccak256\":\"0xc1e3267123d5311b9171c1a801332104986ca062b2d684f3aa2f604a36540f30\",\"urls\":[\"bzz-raw://58b67259e294b99c0c9159e7c4bf260af54d882c68079a507b1e436625c169fa\",\"dweb:/ipfs/QmTZRQJJTjSNWMifRndPqRvQhBZSps2enjctuavGA7qNtm\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/ComptrollerInterface.sol\":{\"keccak256\":\"0x2ce0c7a36274a794306f38a4e1b61b146a45b88b07a047f46f90b96ad6e8a4e5\",\"urls\":[\"bzz-raw://247a0b2d2b12731b592834da3116ea315c48ffcd56630afa6e2e5d369da0b146\",\"dweb:/ipfs/QmWiyDXXZccRZMq3Hv6riDmxD7uTuevxFNbjNxZBmexCTR\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/ComptrollerStorage.sol\":{\"keccak256\":\"0xf6630f20495fb2efb40bc40bf03eed5b5de88d0f8b66b9fd504fb1f36356c384\",\"urls\":[\"bzz-raw://3c5c17a8f799f8160232cfb0375249f347dfed0d5ef7d70c46849a0eddbc5b6a\",\"dweb:/ipfs/QmVyupR3FoBt51RxpkpTQbviK8bcpHg23sNm5TQT8uwWga\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/EIP20Interface.sol\":{\"keccak256\":\"0x5ff13ceed71e8dc66bee62be51cda63bbf097bc333dd30b438c4e7fca824b728\",\"urls\":[\"bzz-raw://81e07c646455af24bc680115727967bd3128909f1e67aa55d82d8563389538b8\",\"dweb:/ipfs/QmPyNRWKgQLZfEZqAxDjwaV4tPKyHt9v6na9aU9Vys13ef\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/EIP20NonStandardInterface.sol\":{\"keccak256\":\"0x26e59866a4c84f9460b5eeed07e4be07d2c0eeecd0ea2b764be82a8fb006eff3\",\"urls\":[\"bzz-raw://361fb3f6ca0aa724290cda94e015877000b0342c0e98eca8f8105c37503f50ab\",\"dweb:/ipfs/QmcDTU7QC9e8PQM4U2C3nrTrJkqYbnztdUr19sXjqaGvRC\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/ErrorReporter.sol\":{\"keccak256\":\"0x1336e09b9d3c6e1f86b6d639066f2849335103e895103683bac1fa52c0915d0d\",\"urls\":[\"bzz-raw://0d82ea67b49f1555709927050da7e6b537cc1810267f437dbf89c9ac5d5f3643\",\"dweb:/ipfs/QmfHJBssHWNeC4GuthBu4EL7bn9WQ3q8KSE7kJGHFaXMQy\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/Exponential.sol\":{\"keccak256\":\"0x628618c11e36abcd9eae92d354ea9c1fce0a997790f70db572544db9ae996c7e\",\"urls\":[\"bzz-raw://c436c3b6f170939355d17c6395de8665e9ead730c88f0c375ad290eec4da388a\",\"dweb:/ipfs/QmeFeiBewuicY3YgcENW8fr2Zbn1hT8wNBugodas6Nhut6\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/Governance/Comp.sol\":{\"keccak256\":\"0x783fc08143e097f0d7af86d31d2e9275626f5223005ba082546f6478c21d690b\",\"urls\":[\"bzz-raw://fd59af07b90328fdd4165229c9dd5767c60ecd694eae6fea36e66cc19ffdcc5b\",\"dweb:/ipfs/QmYLnLGzN9FdHaTjfGkQA7LEXRfc9NjUe8iwQHDDMDo7jQ\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/InterestRateModel.sol\":{\"keccak256\":\"0x831b18a7a2ca84bc83d224e45c57f81d74026f6ea035d2738ea7847d6007f749\",\"urls\":[\"bzz-raw://3ea3cf7e84f739b9398d119d6f0a6e02b8d12ae9369863ebaaaaaac908d9c704\",\"dweb:/ipfs/QmYoingi5jQq9rL7JbFLTMtExZEXgNDN7RycUmdZ6kdrw2\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/PriceOracle.sol\":{\"keccak256\":\"0xa9a1e605557c283565cfd73a182362b08652d07d1658776fb4e524a00277856c\",\"urls\":[\"bzz-raw://bd0f88fe8d1a967e154a47cafc04324e6166e5225c367b6fdc1f33fc79ff7f93\",\"dweb:/ipfs/QmWTNQeqef7b5pEry1qUgbAq83w3yqHCbi72Ma3AS7f6j5\"]},\"/Users/yanyichun/project/Savings/contracts/compound/contracts/Unitroller.sol\":{\"keccak256\":\"0x070ae0796e8fdbd4fb8a3e05a28802f554429b6318588793bda52552ae15ba0a\",\"urls\":[\"bzz-raw://9ae39da18eb3577ad9150c7bdb73d15d5d69b8bd743898b655d443bb53a7a47e\",\"dweb:/ipfs/QmQPeU792TdERMWv3uzS6VoM8HQ9z4oFfR1GLPSYwxmdft\"]},\"/Users/yanyichun/project/Savings/contracts/compound/test/Contracts/ComptrollerScenario.sol\":{\"keccak256\":\"0xf96c2f5916d72e44b00020e135fcaf370248d0b8de204d4977dd7256acb4f3d6\",\"urls\":[\"bzz-raw://c472a2af11c0d0c4f222b91c2e21e252581008be20919621da52d438d14cfa47\",\"dweb:/ipfs/QmNvf6ojUMupdLwnrJT8JUrcD1gqXZv1gU6S5m6EJANaKy\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061045e5760003560e01c8063747026c91161024c578063bdcdc25811610146578063dce15449116100c3578063e9af029211610087578063e9af0292146113c1578063eabe7d91146113e7578063ede4edd01461141d578063f851a44014611443578063fccbe7f61461144b5761045e565b8063dce1544914611351578063dcfbc0c71461137d578063e4028eee14611385578063e6653f3d146113b1578063e8755446146113b95761045e565b8063cc7ebdc41161010a578063cc7ebdc4146111f1578063ce485c5e14611217578063d02f7351146112b8578063d9226ced146112fe578063da3d454c1461131b5761045e565b8063bdcdc25814611071578063bde3672d146110ad578063c2998238146110d3578063c488847b14611174578063ca0af043146111c35761045e565b80639d1b5a0a116101d4578063abfceffc11610198578063abfceffc14610fb5578063ac0b0bb71461102b578063b0772d0b14611033578063b21be7fd1461103b578063bb82aa5e146110695761045e565b80639d1b5a0a14610f3e578063a76b3fda14610f46578063a7f0e23114610f6c578063a8c3c85014610f90578063aa90075414610fad5761045e565b80638e8f294b1161021b5780638e8f294b14610d695780638ebf636414610db1578063929fe9a114610dd057806394b2294b14610dfe578063992c529414610e065761045e565b8063747026c914610d2b5780637dc0d1d014610d3357806387f7630314610d3b5780638c57804e14610d435761045e565b80634d8e50371161035d5780635ec88c79116102e55780636a56947e116102a95780636a56947e14610c0f5780636b79c38d14610c4b5780636d154ea514610c995780636d35bf9114610cbf578063731f0c2b14610d055761045e565b80635ec88c7914610a345780635f5af1aa14610a5a5780635fc7e71e14610a805780636810dfa614610ac65780636a49111214610bf25761045e565b806351dff9891161032c57806351dff9891461097757806352d84d1e146109b357806355ee1fe1146109d057806357e871e7146109f65780635c778605146109fe5761045e565b80634d8e5037146108c25780634e79238f146108ca5780634ef4c3e1146109245780634fd42e171461095a5761045e565b80632d70db78116103eb57806341c728b9116103af57806341c728b91461080457806342cbb15c1461084057806347ef3b3b146108485780634ada90af146108945780634bca0d8c1461089c5761045e565b80632d70db781461076c578063317b0b771461078b5780633aa729b4146107a85780633bcf7ec1146107ce5780633c94786f146107fc5761045e565b80631ededc91116104325780631ededc91146105985780632327c7df146105da57806324008a621461070457806324a3d6221461074057806326782247146107645761045e565b80627e3dd21461046357806318c882a51461047f5780631c3db2e0146104ad5780631d7b33d714610560575b600080fd5b61046b611468565b604080519115158252519081900360200190f35b61046b6004803603604081101561049557600080fd5b506001600160a01b038135169060200135151561146d565b61055e600480360360408110156104c357600080fd5b6001600160a01b038235169190810190604081016020820135600160201b8111156104ed57600080fd5b8201836020820111156104ff57600080fd5b803590602001918460208302840111600160201b8311171561052057600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061160d945050505050565b005b6105866004803603602081101561057657600080fd5b50356001600160a01b031661166f565b60408051918252519081900360200190f35b61055e600480360360a08110156105ae57600080fd5b506001600160a01b03813581169160208101358216916040820135169060608101359060800135611681565b61055e600480360360608110156105f057600080fd5b81359190810190604081016020820135600160201b81111561061157600080fd5b82018360208201111561062357600080fd5b803590602001918460208302840111600160201b8311171561064457600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b81111561069357600080fd5b8201836020820111156106a557600080fd5b803590602001918460208302840111600160201b831117156106c657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550611688945050505050565b6105866004803603608081101561071a57600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013561174e565b610748611817565b604080516001600160a01b039092168252519081900360200190f35b610748611826565b61046b6004803603602081101561078257600080fd5b50351515611835565b610586600480360360208110156107a157600080fd5b503561196f565b61055e600480360360208110156107be57600080fd5b50356001600160a01b0316611a80565b61046b600480360360408110156107e457600080fd5b506001600160a01b0381351690602001351515611bb1565b61046b611d4c565b61055e6004803603608081101561081a57600080fd5b506001600160a01b03813581169160208101359091169060408101359060600135611d5c565b610586611d62565b61055e600480360360c081101561085e57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060808101359060a00135611d67565b610586611d6f565b610586600480360360208110156108b257600080fd5b50356001600160a01b0316611d75565b61055e611d90565b610906600480360360808110156108e057600080fd5b506001600160a01b038135811691602081013590911690604081013590606001356121e2565b60408051938452602084019290925282820152519081900360600190f35b6105866004803603606081101561093a57600080fd5b506001600160a01b0381358116916020810135909116906040013561221c565b6105866004803603602081101561097057600080fd5b50356122c7565b61055e6004803603608081101561098d57600080fd5b506001600160a01b038135811691602081013590911690604081013590606001356123bb565b610748600480360360208110156109c957600080fd5b503561240f565b610586600480360360208110156109e657600080fd5b50356001600160a01b0316612436565b6105866124bd565b61055e60048036036060811015610a1457600080fd5b506001600160a01b038135811691602081013590911690604001356124c3565b61090660048036036020811015610a4a57600080fd5b50356001600160a01b03166124c8565b61058660048036036020811015610a7057600080fd5b50356001600160a01b03166124fd565b610586600480360360a0811015610a9657600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060800135612581565b61055e60048036036080811015610adc57600080fd5b810190602081018135600160201b811115610af657600080fd5b820183602082011115610b0857600080fd5b803590602001918460208302840111600160201b83111715610b2957600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610b7857600080fd5b820183602082011115610b8a57600080fd5b803590602001918460208302840111600160201b83111715610bab57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550505050803515159150602001351515612708565b61055e60048036036020811015610c0857600080fd5b50356128b1565b61055e60048036036080811015610c2557600080fd5b506001600160a01b03813581169160208101358216916040820135169060600135611d5c565b610c7160048036036020811015610c6157600080fd5b50356001600160a01b0316612955565b604080516001600160e01b03909316835263ffffffff90911660208301528051918290030190f35b61046b60048036036020811015610caf57600080fd5b50356001600160a01b031661297f565b61055e600480360360a0811015610cd557600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060800135611681565b61046b60048036036020811015610d1b57600080fd5b50356001600160a01b0316612994565b6105866129a9565b6107486129b4565b61046b6129c3565b610c7160048036036020811015610d5957600080fd5b50356001600160a01b03166129d3565b610d8f60048036036020811015610d7f57600080fd5b50356001600160a01b03166129fd565b6040805193151584526020840192909252151582820152519081900360600190f35b61046b60048036036020811015610dc757600080fd5b50351515612a23565b61046b60048036036040811015610de657600080fd5b506001600160a01b0381358116916020013516612b5c565b610586612b8f565b61055e60048036036080811015610e1c57600080fd5b6001600160a01b0382351691602081013591810190606081016040820135600160201b811115610e4b57600080fd5b820183602082011115610e5d57600080fd5b803590602001918460208302840111600160201b83111715610e7e57600080fd5b9190808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152509295949360208101935035915050600160201b811115610ecd57600080fd5b820183602082011115610edf57600080fd5b803590602001918460208302840111600160201b83111715610f0057600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550612b95945050505050565b610748612de1565b61058660048036036020811015610f5c57600080fd5b50356001600160a01b0316612df9565b610f74612f56565b604080516001600160e01b039092168252519081900360200190f35b61055e60048036036020811015610fa657600080fd5b5035612f69565b610586612f6e565b610fdb60048036036020811015610fcb57600080fd5b50356001600160a01b0316612f74565b60408051602080825283518183015283519192839290830191858101910280838360005b83811015611017578181015183820152602001610fff565b505050509050019250505060405180910390f35b61046b612ffd565b610fdb61300d565b6105866004803603604081101561105157600080fd5b506001600160a01b038135811691602001351661306f565b61074861308c565b6105866004803603608081101561108757600080fd5b506001600160a01b0381358116916020810135821691604082013516906060013561309b565b61055e600480360360208110156110c357600080fd5b50356001600160a01b031661312f565b610fdb600480360360208110156110e957600080fd5b810190602081018135600160201b81111561110357600080fd5b82018360208201111561111557600080fd5b803590602001918460208302840111600160201b8311171561113657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250929550613150945050505050565b6111aa6004803603606081101561118a57600080fd5b506001600160a01b038135811691602081013590911690604001356131e7565b6040805192835260208301919091528051918290030190f35b610586600480360360408110156111d957600080fd5b506001600160a01b038135811691602001351661345c565b6105866004803603602081101561120757600080fd5b50356001600160a01b0316613479565b61055e6004803603602081101561122d57600080fd5b810190602081018135600160201b81111561124757600080fd5b82018360208201111561125957600080fd5b803590602001918460208302840111600160201b8311171561127a57600080fd5b91908080602002602001604051908101604052809392919081815260200183836020028082843760009201919091525092955061348b945050505050565b610586600480360360a08110156112ce57600080fd5b506001600160a01b0381358116916020810135821691604082013581169160608101359091169060800135613520565b6105866004803603602081101561131457600080fd5b50356136d8565b6105866004803603606081101561133157600080fd5b506001600160a01b03813581169160208101359091169060400135613741565b6107486004803603604081101561136757600080fd5b506001600160a01b038135169060200135613a2e565b610748613a63565b6105866004803603604081101561139b57600080fd5b506001600160a01b038135169060200135613a72565b61046b613c22565b610586613c32565b61055e600480360360208110156113d757600080fd5b50356001600160a01b0316613c38565b610586600480360360608110156113fd57600080fd5b506001600160a01b03813581169160208101359091169060400135613c9c565b6105866004803603602081101561143357600080fd5b50356001600160a01b0316613cd9565b610748613fec565b6105866004803603602081101561146157600080fd5b5035613ffb565b600181565b6001600160a01b03821660009081526009602052604081205460ff166114c45760405162461bcd60e51b8152600401808060200182810382526028815260200180615ec56028913960400191505060405180910390fd5b600a546001600160a01b03163314806114e757506000546001600160a01b031633145b6115225760405162461bcd60e51b8152600401808060200182810382526027815260200180615eed6027913960400191505060405180910390fd5b6000546001600160a01b031633148061153d57506001821515145b611587576040805162461bcd60e51b81526020600482015260166024820152756f6e6c792061646d696e2063616e20756e706175736560501b604482015290519081900360640190fd5b6001600160a01b0383166000818152600c6020908152604091829020805486151560ff199091168117909155825193845283830152606090830181905260069083015265426f72726f7760d01b6080830152517f71aec636243f9709bb0007ae15e9afb8150ab01716d75fd7573be5cc096e03b09181900360a00190a150805b92915050565b60408051600180825281830190925260609160208083019080388339019050509050828160008151811061163d57fe5b60200260200101906001600160a01b031690816001600160a01b03168152505061166a8183600180612708565b505050565b600f6020526000908152604090205481565b5050505050565b6002546001600160a01b031633146116e7576040805162461bcd60e51b815260206004820152601d60248201527f6f6e6c7920627261696e732063616e206265636f6d6520697473656c66000000604482015290519081900360640190fd5b60005b82518110156117175761170f83828151811061170257fe5b602002602001015161400a565b6001016116ea565b5060005b815181101561173b5761173382828151811061170257fe5b60010161171b565b50611745836128b1565b61166a8261348b565b6001600160a01b03841660009081526009602052604081205460ff166117765750600961180f565b61177e615e05565b6040518060200160405280876001600160a01b031663aa5af0fd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156117c257600080fd5b505afa1580156117d6573d6000803e3d6000fd5b505050506040513d60208110156117ec57600080fd5b5051905290506117fc86826140e8565b6118098685836000614370565b60009150505b949350505050565b600a546001600160a01b031681565b6001546001600160a01b031681565b600a546000906001600160a01b031633148061185b57506000546001600160a01b031633145b6118965760405162461bcd60e51b8152600401808060200182810382526027815260200180615eed6027913960400191505060405180910390fd5b6000546001600160a01b03163314806118b157506001821515145b6118fb576040805162461bcd60e51b81526020600482015260166024820152756f6e6c792061646d696e2063616e20756e706175736560501b604482015290519081900360640190fd5b600a8054831515600160b81b810260ff60b81b1990921691909117909155604080516020810192909252808252600582820152645365697a6560d81b6060830152517fef159d9a32b2472e32b098f954f3ce62d232939f1c207070b584df1814de2de09181900360800190a150805b919050565b600080546001600160a01b031633146119955761198e6001600461455b565b905061196a565b61199d615e05565b5060408051602081019091528281526119b4615e05565b50604080516020810190915266b1a2bc2ec5000081526119d482826145c1565b156119ed576119e460058061455b565b9250505061196a565b6119f5615e05565b506040805160208101909152670c7d713b49da00008152611a1681846145c9565b15611a3057611a2660058061455b565b935050505061196a565b6005805490869055604080518281526020810188905281517f3b9670cf975d26958e754b57098eaa2ac914d8d2a31b83257997b9f346110fd9929181900390910190a160005b9695505050505050565b6000546001600160a01b03163314611adf576040805162461bcd60e51b815260206004820152601f60248201527f6f6e6c792061646d696e2063616e2064726f7020636f6d70206d61726b657400604482015290519081900360640190fd5b6001600160a01b0381166000908152600960205260409020600381015460ff161515600114611b55576040805162461bcd60e51b815260206004820152601b60248201527f6d61726b6574206973206e6f74206120636f6d70206d61726b65740000000000604482015290519081900360640190fd5b60038101805460ff19169055604080516001600160a01b03841681526000602082015281517f93c1f3e36ed71139f466a4ce8c9751790e2e33f5afb2df0dcfb3aeabe55d5aa2929181900390910190a1611bad611d90565b5050565b6001600160a01b03821660009081526009602052604081205460ff16611c085760405162461bcd60e51b8152600401808060200182810382526028815260200180615ec56028913960400191505060405180910390fd5b600a546001600160a01b0316331480611c2b57506000546001600160a01b031633145b611c665760405162461bcd60e51b8152600401808060200182810382526027815260200180615eed6027913960400191505060405180910390fd5b6000546001600160a01b0316331480611c8157506001821515145b611ccb576040805162461bcd60e51b81526020600482015260166024820152756f6e6c792061646d696e2063616e20756e706175736560501b604482015290519081900360640190fd5b6001600160a01b0383166000818152600b6020908152604091829020805486151560ff199091168117909155825193845283830152606090830181905260049083015263135a5b9d60e21b6080830152517f71aec636243f9709bb0007ae15e9afb8150ab01716d75fd7573be5cc096e03b09181900360a00190a150919050565b600a54600160a01b900460ff1681565b50505050565b435b90565b505050505050565b60065481565b6001600160a01b031660009081526008602052604090205490565b6060600d805480602002602001604051908101604052809291908181526020018280548015611de857602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611dca575b50939450600093505050505b8151811015611eae576000828281518110611e0b57fe5b60200260200101519050611e1d615e05565b6040518060200160405280836001600160a01b031663aa5af0fd6040518163ffffffff1660e01b815260040160206040518083038186803b158015611e6157600080fd5b505afa158015611e75573d6000803e3d6000fd5b505050506040513d6020811015611e8b57600080fd5b505190529050611e9a826145d0565b611ea482826140e8565b5050600101611df4565b50611eb7615e05565b60405180602001604052806000815250905060608251604051908082528060200260200182016040528015611f0657816020015b611ef3615e05565b815260200190600190039081611eeb5790505b50905060005b8351811015612119576000848281518110611f2357fe5b6020908102919091018101516001600160a01b0381166000908152600990925260409091206003015490915060ff161561211057611f5f615e05565b60408051602080820180845260045463fc57d4df60e01b9091526001600160a01b03868116602485015293519293849391169163fc57d4df916044808601929190818703018186803b158015611fb457600080fd5b505afa158015611fc8573d6000803e3d6000fd5b505050506040513d6020811015611fde57600080fd5b505190529050611fec615e05565b6120d26040518060200160405280856001600160a01b031663f8f9da286040518163ffffffff1660e01b815260040160206040518083038186803b15801561203357600080fd5b505afa158015612047573d6000803e3d6000fd5b505050506040513d602081101561205d57600080fd5b50519052604080516308f7a6e360e31b815290516001600160a01b038716916347bd3718916004808301926020929190829003018186803b1580156120a157600080fd5b505afa1580156120b5573d6000803e3d6000fd5b505050506040513d60208110156120cb57600080fd5b505161484e565b90506120dc615e05565b6120e68284614878565b9050808686815181106120f557fe5b602002602001018190525061210a87826148b7565b96505050505b50600101611f0c565b5060005b8351811015611d5c576000600d828154811061213557fe5b600091825260208220015485516001600160a01b03909116925061215a576000612182565b612182600e5461217d86868151811061216f57fe5b6020026020010151886148dc565b61490f565b6001600160a01b0383166000818152600f60209081526040918290208490558151848152915193945091927f2ab93f65628379309f36cb125e90d7c902454a545c4f8b8cb0794af75c24b807929181900390910190a2505060010161211d565b6000806000806000806121f78a8a8a8a614937565b92509250925082601181111561220957fe5b95509093509150505b9450945094915050565b6001600160a01b0383166000908152600b602052604081205460ff161561227b576040805162461bcd60e51b815260206004820152600e60248201526d1b5a5b9d081a5cc81c185d5cd95960921b604482015290519081900360640190fd5b6001600160a01b03841660009081526009602052604090205460ff166122a55760095b90506122c0565b6122ae846145d0565b6122ba84846000614d52565b60005b90505b9392505050565b600080546001600160a01b031633146122e65761198e6001600b61455b565b6122ee615e05565b506040805160208101909152828152612305615e05565b506040805160208101909152670de0b6b3a7640000815261232682826145c9565b15612337576119e46007600c61455b565b61233f615e05565b5060408051602081019091526714d1120d7b160000815261236081846145c9565b1561237157611a266007600c61455b565b6006805490869055604080518281526020810188905281517faeba5a6c40a8ac138134bff1aaa65debf25971188a58804bad717f82f0ec1316929181900390910190a16000611a76565b801580156123c95750600082115b15611d5c576040805162461bcd60e51b815260206004820152601160248201527072656465656d546f6b656e73207a65726f60781b604482015290519081900360640190fd5b600d818154811061241c57fe5b6000918252602090912001546001600160a01b0316905081565b600080546001600160a01b031633146124555761198e6001601061455b565b600480546001600160a01b038481166001600160a01b0319831681179093556040805191909216808252602082019390935281517fd52b2b9b7e9ee655fcb95d2e5b9e0c9f69e7ef2b8e9d2d0ea78402d576d22e22929181900390910190a160009392505050565b60155481565b61166a565b6000806000806000806124df876000806000614937565b9250925092508260118111156124f157fe5b97919650945092505050565b600080546001600160a01b0316331461251c5761198e6001601361455b565b600a80546001600160a01b038481166001600160a01b0319831617928390556040805192821680845293909116602083015280517f0613b6ee6a04f0d09f390e4d9318894b9f6ac7fd83897cd8d18896ba579c401e9281900390910190a160006122c0565b6001600160a01b03851660009081526009602052604081205460ff1615806125c257506001600160a01b03851660009081526009602052604090205460ff16155b156125d15760095b90506126ff565b6000806125dd85614f4a565b919350909150600090508260118111156125f357fe5b1461260d5781601181111561260457fe5b925050506126ff565b80612619576003612604565b6000886001600160a01b03166395dd9193876040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561267157600080fd5b505afa158015612685573d6000803e3d6000fd5b505050506040513d602081101561269b57600080fd5b50516040805160208101909152600554815290915060009081906126bf9084614f6a565b909250905060008260038111156126d257fe5b146126e657600b5b955050505050506126ff565b808711156126f55760116126da565b6000955050505050505b95945050505050565b60005b835181101561168157600084828151811061272257fe5b6020908102919091018101516001600160a01b0381166000908152600990925260409091205490915060ff16612797576040805162461bcd60e51b81526020600482015260156024820152741b585c9ad95d081b5d5cdd081899481b1a5cdd1959605a1b604482015290519081900360640190fd5b6001841515141561285f576127aa615e05565b6040518060200160405280836001600160a01b031663aa5af0fd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156127ee57600080fd5b505afa158015612802573d6000803e3d6000fd5b505050506040513d602081101561281857600080fd5b50519052905061282882826140e8565b60005b875181101561285c576128548389838151811061284457fe5b6020026020010151846001614370565b60010161282b565b50505b600183151514156128a857612873816145d0565b60005b86518110156128a65761289e8288838151811061288f57fe5b60200260200101516001614d52565b600101612876565b505b5060010161270b565b6128b9614fbe565b61290a576040805162461bcd60e51b815260206004820152601f60248201527f6f6e6c792061646d696e2063616e206368616e676520636f6d70207261746500604482015290519081900360640190fd5b600e805490829055604080518281526020810184905281517fc227c9272633c3a307d9845bf2bc2509cefb20d655b5f3c1002d8e1e3f22c8b0929181900390910190a1611bad611d90565b6010602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b600c6020526000908152604090205460ff1681565b600b6020526000908152604090205460ff1681565b66038d7ea4c6800081565b6004546001600160a01b031681565b600a54600160b01b900460ff1681565b6011602052600090815260409020546001600160e01b03811690600160e01b900463ffffffff1682565b60096020526000908152604090208054600182015460039092015460ff91821692911683565b600a546000906001600160a01b0316331480612a4957506000546001600160a01b031633145b612a845760405162461bcd60e51b8152600401808060200182810382526027815260200180615eed6027913960400191505060405180910390fd5b6000546001600160a01b0316331480612a9f57506001821515145b612ae9576040805162461bcd60e51b81526020600482015260166024820152756f6e6c792061646d696e2063616e20756e706175736560501b604482015290519081900360640190fd5b600a8054831515600160b01b810260ff60b01b1990921691909117909155604080516020810192909252808252600882820152672a3930b739b332b960c11b6060830152517fef159d9a32b2472e32b098f954f3ce62d232939f1c207070b584df1814de2de09181900360800190a15090565b6001600160a01b038082166000908152600960209081526040808320938616835260029093019052205460ff1692915050565b60075481565b836001600160a01b031663f851a4406040518163ffffffff1660e01b815260040160206040518083038186803b158015612bce57600080fd5b505afa158015612be2573d6000803e3d6000fd5b505050506040513d6020811015612bf857600080fd5b50516001600160a01b03163314612c405760405162461bcd60e51b8152600401808060200182810382526027815260200180615f596027913960400191505060405180910390fd5b836001600160a01b031663c1e803346040518163ffffffff1660e01b8152600401602060405180830381600087803b158015612c7b57600080fd5b505af1158015612c8f573d6000803e3d6000fd5b505050506040513d6020811015612ca557600080fd5b505115612cf1576040805162461bcd60e51b815260206004820152601560248201527418da185b99d9481b9bdd08185d5d1a1bdc9a5e9959605a1b604482015290519081900360640190fd5b836001600160a01b0316632327c7df8484846040518463ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019060200280838360005b83811015612d5c578181015183820152602001612d44565b50505050905001838103825284818151815260200191508051906020019060200280838360005b83811015612d9b578181015183820152602001612d83565b5050505090500195505050505050600060405180830381600087803b158015612dc357600080fd5b505af1158015612dd7573d6000803e3d6000fd5b5050505050505050565b73c00e94cb662c3520282e6f5717214004a7f2688890565b600080546001600160a01b03163314612e185761198e6001601261455b565b6001600160a01b03821660009081526009602052604090205460ff1615612e455761198e600a601161455b565b816001600160a01b031663fe9c44ae6040518163ffffffff1660e01b815260040160206040518083038186803b158015612e7e57600080fd5b505afa158015612e92573d6000803e3d6000fd5b505050506040513d6020811015612ea857600080fd5b5050604080516060810182526001808252600060208381018281528486018381526001600160a01b03891684526009909252949091209251835490151560ff19918216178455935191830191909155516003909101805491151591909216179055612f128261400a565b604080516001600160a01b038416815290517fcf583bb0c569eb967f806b11601c4cb93c10310485c67add5f8362c2f212321f9181900360200190a1600092915050565b6ec097ce7bc90715b34b9f100000000081565b601555565b600e5481565b60608060086000846001600160a01b03166001600160a01b03168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015612ff057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612fd2575b5093979650505050505050565b600a54600160b81b900460ff1681565b6060600d80548060200260200160405190810160405280929190818152602001828054801561306557602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613047575b5050505050905090565b601260209081526000928352604080842090915290825290205481565b6002546001600160a01b031681565b600a54600090600160b01b900460ff16156130f2576040805162461bcd60e51b81526020600482015260126024820152711d1c985b9cd9995c881a5cc81c185d5cd95960721b604482015290519081900360640190fd5b60006130ff868685614fe7565b9050801561310e57905061180f565b613117866145d0565b61312386866000614d52565b61180986856000614d52565b6001600160a01b03166000908152600960205260409020805460ff19169055565b6060600082519050606081604051908082528060200260200182016040528015613184578160200160208202803883390190505b50905060005b828110156131df5760008582815181106131a057fe5b602002602001015190506131b4813361508a565b60118111156131bf57fe5b8383815181106131cb57fe5b60209081029190910101525060010161318a565b509392505050565b600480546040805163fc57d4df60e01b81526001600160a01b038781169482019490945290516000938493849391169163fc57d4df91602480820192602092909190829003018186803b15801561323d57600080fd5b505afa158015613251573d6000803e3d6000fd5b505050506040513d602081101561326757600080fd5b5051600480546040805163fc57d4df60e01b81526001600160a01b038a8116948201949094529051939450600093929091169163fc57d4df91602480820192602092909190829003018186803b1580156132c057600080fd5b505afa1580156132d4573d6000803e3d6000fd5b505050506040513d60208110156132ea57600080fd5b505190508115806132f9575080155b1561330e57600d935060009250613454915050565b6000866001600160a01b031663182df0f56040518163ffffffff1660e01b815260040160206040518083038186803b15801561334957600080fd5b505afa15801561335d573d6000803e3d6000fd5b505050506040513d602081101561337357600080fd5b505190506000613381615e05565b613389615e05565b613391615e05565b600061339f600654896151ab565b9450905060008160038111156133b157fe5b146133cd57600b5b995060009850613454975050505050505050565b6133d787876151ab565b9350905060008160038111156133e957fe5b146133f557600b6133b9565b6133ff84846151e6565b92509050600081600381111561341157fe5b1461341d57600b6133b9565b613427828c614f6a565b95509050600081600381111561343957fe5b1461344557600b6133b9565b60009950939750505050505050505b935093915050565b601360209081526000928352604080842090915290825290205481565b60146020526000908152604090205481565b613493614fbe565b6134e4576040805162461bcd60e51b815260206004820152601e60248201527f6f6e6c792061646d696e2063616e2061646420636f6d70206d61726b65740000604482015290519081900360640190fd5b60005b81518110156135145761350c8282815181106134ff57fe5b60200260200101516151fe565b6001016134e7565b5061351d611d90565b50565b600a54600090600160b81b900460ff1615613574576040805162461bcd60e51b815260206004820152600f60248201526e1cd95a5e99481a5cc81c185d5cd959608a1b604482015290519081900360640190fd5b6001600160a01b03861660009081526009602052604090205460ff1615806135b557506001600160a01b03851660009081526009602052604090205460ff16155b156135c15760096125ca565b846001600160a01b0316635fe3b5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156135fa57600080fd5b505afa15801561360e573d6000803e3d6000fd5b505050506040513d602081101561362457600080fd5b505160408051635fe3b56760e01b815290516001600160a01b0392831692891691635fe3b567916004808301926020929190829003018186803b15801561366a57600080fd5b505afa15801561367e573d6000803e3d6000fd5b505050506040513d602081101561369457600080fd5b50516001600160a01b0316146136ab5760026125ca565b6136b4866145d0565b6136c086846000614d52565b6136cc86856000614d52565b60009695505050505050565b600080546001600160a01b031633146136f75761198e6001600d61455b565b6007805490839055604080518281526020810185905281517f7093cf1eb653f749c3ff531d6df7f92764536a7fa0d13530cd26e070780c32ea929181900390910190a160006122c0565b6001600160a01b0383166000908152600c602052604081205460ff16156137a2576040805162461bcd60e51b815260206004820152601060248201526f189bdc9c9bddc81a5cc81c185d5cd95960821b604482015290519081900360640190fd5b6001600160a01b03841660009081526009602052604090205460ff166137c957600961229e565b6001600160a01b038085166000908152600960209081526040808320938716835260029093019052205460ff166138b957336001600160a01b0385161461384f576040805162461bcd60e51b815260206004820152601560248201527439b2b73232b91036bab9ba1031329031aa37b5b2b760591b604482015290519081900360640190fd5b600061385b338561508a565b9050600081601181111561386b57fe5b146138845780601181111561387c57fe5b9150506122c0565b6001600160a01b038086166000908152600960209081526040808320938816835260029093019052205460ff166138b757fe5b505b600480546040805163fc57d4df60e01b81526001600160a01b03888116948201949094529051929091169163fc57d4df91602480820192602092909190829003018186803b15801561390a57600080fd5b505afa15801561391e573d6000803e3d6000fd5b505050506040513d602081101561393457600080fd5b505161394157600d61229e565b6000806139518587600087614937565b9193509091506000905082601181111561396757fe5b146139815781601181111561397857fe5b925050506122c0565b801561398e576004613978565b613996615e05565b6040518060200160405280886001600160a01b031663aa5af0fd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156139da57600080fd5b505afa1580156139ee573d6000803e3d6000fd5b505050506040513d6020811015613a0457600080fd5b505190529050613a1487826140e8565b613a218787836000614370565b6000979650505050505050565b60086020528160005260406000208181548110613a4757fe5b6000918252602090912001546001600160a01b03169150829050565b6003546001600160a01b031681565b600080546001600160a01b03163314613a9857613a916001600661455b565b9050611607565b6001600160a01b0383166000908152600960205260409020805460ff16613acd57613ac56009600761455b565b915050611607565b613ad5615e05565b506040805160208101909152838152613aec615e05565b506040805160208101909152670c7d713b49da00008152613b0d81836145c9565b15613b2857613b1e6006600861455b565b9350505050611607565b8415801590613bb15750600480546040805163fc57d4df60e01b81526001600160a01b038a8116948201949094529051929091169163fc57d4df91602480820192602092909190829003018186803b158015613b8357600080fd5b505afa158015613b97573d6000803e3d6000fd5b505050506040513d6020811015613bad57600080fd5b5051155b15613bc257613b1e600d600961455b565b60018301805490869055604080516001600160a01b03891681526020810183905280820188905290517f70483e6592cd5182d45ac970e05bc62cdcc90e9d8ef2c2dbe686cf383bcd7fc59181900360600190a16000979650505050505050565b600a54600160a81b900460ff1681565b60055481565b61351d81600d805480602002602001604051908101604052809291908181526020018280548015613c9257602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613c74575b505050505061160d565b600080613caa858585614fe7565b90508015613cb95790506122c0565b613cc2856145d0565b613cce85856000614d52565b600095945050505050565b6000808290506000806000836001600160a01b031663c37f68e2336040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060806040518083038186803b158015613d3a57600080fd5b505afa158015613d4e573d6000803e3d6000fd5b505050506040513d6080811015613d6457600080fd5b508051602082015160409092015190945090925090508215613db75760405162461bcd60e51b8152600401808060200182810382526025815260200180615f146025913960400191505060405180910390fd5b8015613dd457613dc9600c600261455b565b94505050505061196a565b6000613de1873385614fe7565b90508015613e0257613df6600e600383615519565b9550505050505061196a565b6001600160a01b0385166000908152600960209081526040808320338452600281019092529091205460ff16613e41576000965050505050505061196a565b3360009081526002820160209081526040808320805460ff191690556008825291829020805483518184028101840190945280845260609392830182828015613eb357602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613e95575b5050835193945083925060009150505b82811015613f0857896001600160a01b0316848281518110613ee157fe5b60200260200101516001600160a01b03161415613f0057809150613f08565b600101613ec3565b50818110613f1257fe5b336000908152600860205260409020805481906000198101908110613f3357fe5b9060005260206000200160009054906101000a90046001600160a01b0316818381548110613f5d57fe5b600091825260209091200180546001600160a01b0319166001600160a01b03929092169190911790558054613f96826000198301615e18565b50604080516001600160a01b038c16815233602082015281517fe699a64c18b07ac5b7301aa273f36a2287239eb9501d81950672794afba29a0d929181900390910190a160009c9b505050505050505050505050565b6000546001600160a01b031681565b60158054820190819055919050565b60005b600d5481101561409557816001600160a01b0316600d828154811061402e57fe5b6000918252602090912001546001600160a01b0316141561408d576040805162461bcd60e51b81526020600482015260146024820152731b585c9ad95d08185b1c9958591e48185919195960621b604482015290519081900360640190fd5b60010161400d565b50600d80546001810182556000919091527fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb50180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b0382166000908152601160209081526040808320600f9092528220549091614115611d62565b8354909150600090614135908390600160e01b900463ffffffff1661557f565b90506000811180156141475750600083115b156143165760006141bc876001600160a01b03166347bd37186040518163ffffffff1660e01b815260040160206040518083038186803b15801561418a57600080fd5b505afa15801561419e573d6000803e3d6000fd5b505050506040513d60208110156141b457600080fd5b5051876155b9565b905060006141ca83866155d7565b90506141d4615e05565b600083116141f157604051806020016040528060008152506141fb565b6141fb8284615619565b9050614205615e05565b604080516020810190915288546001600160e01b0316815261422790836148b7565b9050604051806040016040528061427783600001516040518060400160405280601a81526020017f6e657720696e646578206578636565647320323234206269747300000000000081525061564e565b6001600160e01b031681526020016142b2886040518060400160405280601c8152602001600080516020615f398339815191528152506156e8565b63ffffffff9081169091526001600160a01b038c166000908152601160209081526040909120835181549490920151909216600160e01b026001600160e01b039182166001600160e01b0319909416939093171691909117905550611d6792505050565b8015611d6757614349826040518060400160405280601c8152602001600080516020615f398339815191528152506156e8565b845463ffffffff91909116600160e01b026001600160e01b03909116178455505050505050565b6001600160a01b0384166000908152601160205260409020614390615e05565b50604080516020810190915281546001600160e01b031681526143b1615e05565b5060408051602080820183526001600160a01b03808a16600090815260138352848120918a1680825282845294812080548552865195909152915291909155805115614552576143ff615e05565b614409838361573d565b90506000614498896001600160a01b03166395dd91938a6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b15801561446657600080fd5b505afa15801561447a573d6000803e3d6000fd5b505050506040513d602081101561449057600080fd5b5051886155b9565b905060006144a68284615762565b6001600160a01b038a16600090815260146020526040812054919250906144cd9083615782565b90506144ee8a828a6144e65766038d7ea4c680006144e9565b60005b6157b8565b6001600160a01b03808c1660008181526014602090815260409182902094909455895181518781529485015280519193928f16927f1fc3ecc087d8d2d15e23d0032af5a47059c3892d003d8e139fdcb6bb327c99a6929081900390910190a3505050505b50505050505050565b60007f45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa083601181111561458a57fe5b83601381111561459657fe5b604080519283526020830191909152600082820152519081900360600190a18260118111156122c057fe5b519051111590565b5190511090565b6001600160a01b0381166000908152601060209081526040808320600f90925282205490916145fd611d62565b835490915060009061461d908390600160e01b900463ffffffff1661557f565b905060008111801561462f5750600083115b156147f5576000856001600160a01b03166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561466f57600080fd5b505afa158015614683573d6000803e3d6000fd5b505050506040513d602081101561469957600080fd5b5051905060006146a983866155d7565b90506146b3615e05565b600083116146d057604051806020016040528060008152506146da565b6146da8284615619565b90506146e4615e05565b604080516020810190915288546001600160e01b0316815261470690836148b7565b9050604051806040016040528061475683600001516040518060400160405280601a81526020017f6e657720696e646578206578636565647320323234206269747300000000000081525061564e565b6001600160e01b03168152602001614791886040518060400160405280601c8152602001600080516020615f398339815191528152506156e8565b63ffffffff9081169091526001600160a01b038b166000908152601060209081526040909120835181549490920151909216600160e01b026001600160e01b039182166001600160e01b031990941693909317169190911790555061168192505050565b801561168157614828826040518060400160405280601c8152602001600080516020615f398339815191528152506156e8565b845463ffffffff91909116600160e01b026001600160e01b039091161784555050505050565b614856615e05565b604051806020016040528061486f8560000151856155d7565b90529392505050565b614880615e05565b6040518060200160405280670de0b6b3a76400006148a6866000015186600001516155d7565b816148ad57fe5b0490529392505050565b6148bf615e05565b604051806020016040528061486f85600001518560000151615782565b6148e4615e05565b604051806020016040528061486f6149088660000151670de0b6b3a76400006155d7565b85516158fd565b6000670de0b6b3a76400006149288484600001516155d7565b8161492f57fe5b049392505050565b6000806000614944615e3c565b6001600160a01b0388166000908152600860209081526040808320805482518185028101850190935280835284936060939291908301828280156149b157602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311614993575b50939450600093505050505b8151811015614d0d5760008282815181106149d457fe5b60200260200101519050806001600160a01b031663c37f68e28e6040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060806040518083038186803b158015614a3457600080fd5b505afa158015614a48573d6000803e3d6000fd5b505050506040513d6080811015614a5e57600080fd5b508051602082015160408084015160609485015160808c0152938a01939093529188019190915294508415614aa45750600f975060009650869550612212945050505050565b60408051602080820183526001600160a01b0380851660008181526009845285902060010154845260c08b01939093528351808301855260808b0151815260e08b015260048054855163fc57d4df60e01b815291820194909452935192169263fc57d4df9260248083019392829003018186803b158015614b2457600080fd5b505afa158015614b38573d6000803e3d6000fd5b505050506040513d6020811015614b4e57600080fd5b505160a08701819052614b725750600d975060009650869550612212945050505050565b604080516020810190915260a08701518152610100870181905260c087015160e0880151614b9f92615930565b61012088015293506000846003811115614bb557fe5b14614bd15750600b975060009650869550612212945050505050565b614be986610120015187604001518860000151615988565b875293506000846003811115614bfb57fe5b14614c175750600b975060009650869550612212945050505050565b614c2f86610100015187606001518860200151615988565b602088015293506000846003811115614c4457fe5b14614c605750600b975060009650869550612212945050505050565b8b6001600160a01b0316816001600160a01b03161415614d0457614c8e8661012001518c8860200151615988565b602088015293506000846003811115614ca357fe5b14614cbf5750600b975060009650869550612212945050505050565b614cd38661010001518b8860200151615988565b602088015293506000846003811115614ce857fe5b14614d045750600b975060009650869550612212945050505050565b506001016149bd565b50602084015184511115614d34575050506020810151905160009450039150829050612212565b50508151602090920151600095508594509190910391506122129050565b6001600160a01b0383166000908152601060205260409020614d72615e05565b50604080516020810190915281546001600160e01b03168152614d93615e05565b5060408051602080820183526001600160a01b03808916600090815260128352848120918916808252828452948120805485528651959091529152919091558051158015614de15750815115155b15614df9576ec097ce7bc90715b34b9f100000000081525b614e01615e05565b614e0b838361573d565b90506000876001600160a01b03166370a08231886040518263ffffffff1660e01b815260040180826001600160a01b03166001600160a01b0316815260200191505060206040518083038186803b158015614e6557600080fd5b505afa158015614e79573d6000803e3d6000fd5b505050506040513d6020811015614e8f57600080fd5b505190506000614e9f8284615762565b6001600160a01b03891660009081526014602052604081205491925090614ec69083615782565b9050614edf89828a6144e65766038d7ea4c680006144e9565b6001600160a01b03808b1660008181526014602090815260409182902094909455895181518781529485015280519193928e16927f2caecd17d02f56fa897705dcc740da2d237c373f70686f4e0d9bd3bf0400ea7a929081900390910190a350505050505050505050565b6000806000614f5d846000806000614937565b9250925092509193909250565b6000806000614f77615e05565b614f8186866159d5565b90925090506000826003811115614f9457fe5b14614fa55750915060009050614fb7565b6000614fb082615a3d565b9350935050505b9250929050565b600080546001600160a01b0316331480614fe257506002546001600160a01b031633145b905090565b6001600160a01b03831660009081526009602052604081205460ff1661500e57600961229e565b6001600160a01b038085166000908152600960209081526040808320938716835260029093019052205460ff1661504657600061229e565b6000806150568587866000614937565b9193509091506000905082601181111561506c57fe5b1461507d5781601181111561397857fe5b80156136cc576004613978565b6001600160a01b0382166000908152600960205260408120805460ff166150b5576009915050611607565b6001600160a01b038316600090815260028201602052604090205460ff161515600114156150e7576000915050611607565b6007546001600160a01b03841660009081526008602052604090205410615112576010915050611607565b6001600160a01b0380841660008181526002840160209081526040808320805460ff19166001908117909155600883528184208054918201815584529282902090920180549489166001600160a01b031990951685179055815193845283019190915280517f3ab23ab0d51cccc0c3085aec51f99228625aa1a922b3a8ca89a26b0f2027a1a59281900390910190a15060009392505050565b60006151b5615e05565b6151db604051806020016040528086815250604051806020016040528086815250615a4c565b915091509250929050565b60006151f0615e05565b835183516151db9190615b35565b6001600160a01b0381166000908152600960205260409020805460ff161515600114615271576040805162461bcd60e51b815260206004820152601960248201527f636f6d70206d61726b6574206973206e6f74206c697374656400000000000000604482015290519081900360640190fd5b600381015460ff16156152cb576040805162461bcd60e51b815260206004820152601960248201527f636f6d70206d61726b657420616c726561647920616464656400000000000000604482015290519081900360640190fd5b60038101805460ff19166001908117909155604080516001600160a01b0385168152602081019290925280517f93c1f3e36ed71139f466a4ce8c9751790e2e33f5afb2df0dcfb3aeabe55d5aa29281900390910190a16001600160a01b0382166000908152601060205260409020546001600160e01b031615801561537357506001600160a01b038216600090815260106020526040902054600160e01b900463ffffffff16155b156154305760405180604001604052806ec097ce7bc90715b34b9f10000000006001600160e01b031681526020016153d56153ac611d62565b6040518060400160405280601c8152602001600080516020615f398339815191528152506156e8565b63ffffffff9081169091526001600160a01b0384166000908152601060209081526040909120835181549490920151909216600160e01b026001600160e01b039182166001600160e01b031990941693909317169190911790555b6001600160a01b0382166000908152601160205260409020546001600160e01b031615801561548257506001600160a01b038216600090815260116020526040902054600160e01b900463ffffffff16155b15611bad5760405180604001604052806ec097ce7bc90715b34b9f10000000006001600160e01b031681526020016154bb6153ac611d62565b63ffffffff9081169091526001600160a01b0384166000908152601160209081526040909120835181549490920151909216600160e01b026001600160e01b039182166001600160e01b031990941693909317169190911790555050565b60007f45b96fe442630264581b197e84bbada861235052c5a1aadfff9ea4e40a969aa084601181111561554857fe5b84601381111561555457fe5b604080519283526020830191909152818101859052519081900360600190a18360118111156122bd57fe5b60006122c08383604051806040016040528060158152602001747375627472616374696f6e20756e646572666c6f7760581b815250615be5565b60006122c06155d084670de0b6b3a76400006155d7565b83516158fd565b60006122c083836040518060400160405280601781526020017f6d756c7469706c69636174696f6e206f766572666c6f77000000000000000000815250615c3f565b615621615e05565b604051806020016040528061486f615648866ec097ce7bc90715b34b9f10000000006155d7565b856158fd565b600081600160e01b84106156e05760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156156a557818101518382015260200161568d565b50505050905090810190601f1680156156d25780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b509192915050565b600081600160201b84106156e05760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156156a557818101518382015260200161568d565b615745615e05565b604051806020016040528061486f8560000151856000015161557f565b60006ec097ce7bc90715b34b9f10000000006149288484600001516155d7565b60006122c08383604051806040016040528060118152602001706164646974696f6e206f766572666c6f7760781b815250615cbe565b60008183101580156157ca5750600083115b156158f55760006157d9612de1565b604080516370a0823160e01b815230600482015290519192506000916001600160a01b038416916370a08231916024808301926020929190829003018186803b15801561582557600080fd5b505afa158015615839573d6000803e3d6000fd5b505050506040513d602081101561584f57600080fd5b505190508085116158f257816001600160a01b031663a9059cbb87876040518363ffffffff1660e01b815260040180836001600160a01b03166001600160a01b0316815260200182815260200192505050602060405180830381600087803b1580156158ba57600080fd5b505af11580156158ce573d6000803e3d6000fd5b505050506040513d60208110156158e457600080fd5b50600093506122c092505050565b50505b509092915050565b60006122c083836040518060400160405280600e81526020016d646976696465206279207a65726f60901b815250615d13565b600061593a615e05565b6000615944615e05565b61594e8787615a4c565b9092509050600082600381111561596157fe5b14615970579092509050613454565b61597a8186615a4c565b935093505050935093915050565b6000806000615995615e05565b61599f87876159d5565b909250905060008260038111156159b257fe5b146159c35750915060009050613454565b61597a6159cf82615a3d565b86615d75565b60006159df615e05565b6000806159f0866000015186615d9b565b90925090506000826003811115615a0357fe5b14615a2257506040805160208101909152600081529092509050614fb7565b60408051602081019091529081526000969095509350505050565b51670de0b6b3a7640000900490565b6000615a56615e05565b600080615a6b86600001518660000151615d9b565b90925090506000826003811115615a7e57fe5b14615a9d57506040805160208101909152600081529092509050614fb7565b600080615ab26706f05b59d3b2000084615d75565b90925090506000826003811115615ac557fe5b14615ae757506040805160208101909152600081529094509250614fb7915050565b600080615afc83670de0b6b3a7640000615dda565b90925090506000826003811115615b0f57fe5b14615b1657fe5b604080516020810190915290815260009a909950975050505050505050565b6000615b3f615e05565b600080615b5486670de0b6b3a7640000615d9b565b90925090506000826003811115615b6757fe5b14615b8657506040805160208101909152600081529092509050614fb7565b600080615b938388615dda565b90925090506000826003811115615ba657fe5b14615bc857506040805160208101909152600081529094509250614fb7915050565b604080516020810190915290815260009890975095505050505050565b60008184841115615c375760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156156a557818101518382015260200161568d565b505050900390565b6000831580615c4c575082155b15615c59575060006122c0565b83830283858281615c6657fe5b04148390615cb55760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156156a557818101518382015260200161568d565b50949350505050565b60008383018285821015615cb55760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156156a557818101518382015260200161568d565b60008183615d625760405162461bcd60e51b81526020600482018181528351602484015283519092839260449091019190850190808383600083156156a557818101518382015260200161568d565b50828481615d6c57fe5b04949350505050565b600080838301848110615d8d57600092509050614fb7565b506002915060009050614fb7565b60008083615dae57506000905080614fb7565b83830283858281615dbb57fe5b0414615dcf57506002915060009050614fb7565b600092509050614fb7565b60008082615dee5750600190506000614fb7565b6000838581615df957fe5b04915091509250929050565b6040518060200160405280600081525090565b81548183558181111561166a5760008381526020902061166a918101908301615ea6565b604051806101400160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001615e7a615e05565b8152602001615e87615e05565b8152602001615e94615e05565b8152602001615ea1615e05565b905290565b611d6491905b80821115615ec05760008155600101615eac565b509056fe63616e6e6f742070617573652061206d61726b65742074686174206973206e6f74206c69737465646f6e6c7920706175736520677561726469616e20616e642061646d696e2063616e207061757365657869744d61726b65743a206765744163636f756e74536e617073686f74206661696c6564626c6f636b206e756d62657220657863656564732033322062697473000000006f6e6c7920756e6974726f6c6c65722061646d696e2063616e206368616e676520627261696e73a265627a7a72315820ef39113d597441a2e89c09584d9eca9043168546bbf1cb34f6222fda5de430d164736f6c634300050e0032",
  "sourceMap": "69:572:42:-;;;150:37;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3620:5:17;:18;;-1:-1:-1;;;;;;3620:18:17;3628:10;3620:18;;;69:572:42;;;;;;",
  "deployedSourceMapi;:::-;;;;;;;;;;;;;;;;;;43194:501:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;43194:501:17;;;;;;;;;;:::i;53588:205::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;53588:205:17;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;53588:205:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;53588:205:17;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;53588:205:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;53588:205:17;;-1:-1:-1;53588:205:17;;-1:-1:-1;;;;;53588:205:17:i;:::-;;3265:42:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3265:42:21;-1:-1:-1;;;;;3265:42:21;;:::i;:::-;;;;;;;;;;;;;;;;17284:441:17;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;17284:441:17;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;44871:558::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;44871:558:17;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;44871:558:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;44871:558:17;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;44871:558:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;44871:558:17;;;;;;;;-1:-1:-1;44871:558:17;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;44871:558:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;44871:558:17;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;44871:558:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;44871:558:17;;-1:-1:-1;44871:558:17;;-1:-1:-1;;;;;44871:558:17:i;16345:626::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;16345:626:17;;;;;;;;;;;;;;;;;;;;;;:::i;2426:28:21:-;;;:::i;:::-;;;;-1:-1:-1;;;;;2426:28:21;;;;;;;;;;;;;;273:27;;;:::i;44078:362:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;44078:362:17;;;;:::i;35194:1029::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;35194:1029:17;;:::i;57067:365::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;57067:365:17;-1:-1:-1;;;;;57067:365:17;;:::i;42693:495::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;42693:495:17;;;;;;;;;;:::i;2460:31:21:-;;;:::i;10433:351:17:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;10433:351:17;;;;;;;;;;;;;;;;;;;;;;:::i;57719:89::-;;;:::i;19893:527::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;19893:527:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;952:40:21:-;;;:::i;408:129:42:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;408:129:42;-1:-1:-1;;;;;408:129:42;;:::i;45814:1404:17:-;;;:::i;26935:401::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;26935:401:17;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;9524:586;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;9524:586:17;;;;;;;;;;;;;;;;;:::i;39164:1476::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;39164:1476:17;;:::i;12857:340::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;12857:340:17;;;;;;;;;;;;;;;;;;;;;;:::i;3054:26:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3054:26:21;;:::i;34345:556:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;34345:556:17;-1:-1:-1;;;;;34345:556:17;;:::i;120:23:42:-;;;:::i;15546:312:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;15546:312:17;;;;;;;;;;;;;;;;;:::i;25582:264::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;25582:264:17;-1:-1:-1;;;;;25582:264:17;;:::i;42095:592::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;42095:592:17;-1:-1:-1;;;;;42095:592:17;;:::i;18169:1260::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;18169:1260:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;54127:933::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;54127:933:17;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;54127:933:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;54127:933:17;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;54127:933:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;54127:933:17;;;;;;;;-1:-1:-1;54127:933:17;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;54127:933:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;54127:933:17;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;54127:933:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;54127:933:17;;-1:-1:-1;;;;54127:933:17;;;;;-1:-1:-1;54127:933:17;;;;;;:::i;55252:267::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;55252:267:17;;:::i;24276:334::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;24276:334:17;;;;;;;;;;;;;;;;;;;;;;:::i;3375:58:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3375:58:21;-1:-1:-1;;;;;3375:58:21;;:::i;:::-;;;;-1:-1:-1;;;;;3375:58:21;;;;;;;;;;;;;;;;;;;;;;2669:52;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2669:52:21;-1:-1:-1;;;;;2669:52:21;;:::i;22284:458:17:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;22284:458:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2613:50:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2613:50:21;-1:-1:-1;;;;;2613:50:21;;:::i;2743::17:-;;;:::i;663:25:21:-;;;:::i;2536:34::-;;;:::i;3501:58::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3501:58:21;-1:-1:-1;;;;;3501:58:21;;:::i;2114:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2114:41:21;-1:-1:-1;;;;;2114:41:21;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43701:371:17;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;43701:371:17;;;;:::i;4334:161::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;4334:161:17;;;;;;;;;;:::i;1117:21:21:-;;;:::i;44446:419:17:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;44446:419:17;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;44446:419:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;44446:419:17;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;44446:419:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;44446:419:17;;;;;;;;-1:-1:-1;44446:419:17;;-1:-1:-1;;;;;5:28;;2:2;;;46:1;43;36:12;2:2;44446:419:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;44446:419:17;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;44446:419:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;44446:419:17;;-1:-1:-1;44446:419:17;;-1:-1:-1;;;;;44446:419:17:i;57917:122::-;;;:::i;40959:654::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;40959:654:17;-1:-1:-1;;;;;40959:654:17;;:::i;2852:47::-;;;:::i;:::-;;;;-1:-1:-1;;;;;2852:47:17;;;;;;;;;;;;;;321:81:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;321:81:42;;:::i;3162:20:21:-;;;:::i;3895:170:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3895:170:17;-1:-1:-1;;;;;3895:170:17;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;3895:170:17;;;;;;;;;;;;;;;;;2576:31:21;;;:::i;57616:97:17:-;;;:::i;3676:69:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3676:69:21;;;;;;;;;;:::i;364:40::-;;;:::i;23199:761:17:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;23199:761:17;;;;;;;;;;;;;;;;;;;;;;:::i;543:96:42:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;543:96:42;-1:-1:-1;;;;;543:96:42;;:::i;4754:368:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4754:368:17;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;4754:368:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;4754:368:17;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;4754:368:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;4754:368:17;;-1:-1:-1;4754:368:17;;-1:-1:-1;;;;;4754:368:17:i;32140:1949::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;32140:1949:17;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3862:69:21;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3862:69:21;;;;;;;;;;:::i;4008:43::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4008:43:21;-1:-1:-1;;;;;4008:43:21;;:::i;55685:280:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;55685:280:17;;;;;;;;-1:-1:-1;;;5:28;;2:2;;;46:1;43;36:12;2:2;55685:280:17;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;55685:280:17;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;-1:-1;;;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;55685:280:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;55685:280:17;;-1:-1:-1;55685:280:17;;-1:-1:-1;;;;;55685:280:17:i;20873:960::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;20873:960:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;38468:403::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;38468:403:17;;:::i;13629:1618::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;13629:1618:17;;;;;;;;;;;;;;;;;:::i;1240:49:21:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1240:49:21;;;;;;;;:::i;469:47::-;;;:::i;36588:1606:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;36588:1606:17;;;;;;;;:::i;2497:33:21:-;;;:::i;805:31::-;;;:::i;53284:95:17:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;53284:95:17;-1:-1:-1;;;;;53284:95:17;;:::i;11226:441::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;11226:441:17;;;;;;;;;;;;;;;;;:::i;6929:2127::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6929:2127:17;-1:-1:-1;;;;;6929:2127:17;;:::i;177:20:21:-;;;:::i;193:122:42:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;193:122:42;;:::i;141:41:20:-;178:4;141:41;:::o;43194:501:17:-;-1:-1:-1;;;;;43287:24:17;;43263:4;43287:24;;;:7;:24;;;;;:33;;;43279:86;;;;-1:-1:-1;;;43279:86:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43397:13;;-1:-1:-1;;;;;43397:13:17;43383:10;:27;;:50;;-1:-1:-1;43428:5:17;;-1:-1:-1;;;;;43428:5:17;43414:10;:19;43383:50;43375:102;;;;-1:-1:-1;;;43375:102:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43509:5;;-1:-1:-1;;;;;43509:5:17;43495:10;:19;;:36;;-1:-1:-1;43527:4:17;43518:13;;;;43495:36;43487:71;;;;;-1:-1:-1;;;43487:71:17;;;;;;;;;;;;-1:-1:-1;;;43487:71:17;;;;;;;;;;;;;;;-1:-1:-1;;;;;43569:37:17;;;;;;:20;:37;;;;;;;;;:45;;;;;-1:-1:-1;;43569:45:17;;;;;;;;43629:37;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;43629:37:17;;;;;;;;;;;;;;-1:-1:-1;43683:5:17;43194:501;;;;;:::o;53588:205::-;53692:16;;;53706:1;53692:16;;;;;;;;;53665:24;;53692:16;;;;;;105:10:-1;53692:16:17;88:34:-1;136:17;;-1:-1;53692:16:17;53665:43;;53731:6;53718:7;53726:1;53718:10;;;;;;;;;;;;;:19;-1:-1:-1;;;;;53718:19:17;;;-1:-1:-1;;;;;53718:19:17;;;;;53747:39;53757:7;53766;53775:4;53781;53747:9;:39::i;:::-;53588:205;;;:::o;3265:42:21:-;;;;;;;;;;;;;:::o;17284:441:17:-;;;;;;:::o;44871:558::-;45016:25;;-1:-1:-1;;;;;45016:25:17;45002:10;:39;44994:81;;;;;-1:-1:-1;;;44994:81:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;45091:6;45086:124;45107:16;:23;45103:1;:27;45086:124;;;45151:48;45178:16;45195:1;45178:19;;;;;;;;;;;;;;45151:18;:48::i;:::-;45132:3;;45086:124;;;-1:-1:-1;45225:6:17;45220:126;45241:17;:24;45237:1;:28;45220:126;;;45286:49;45313:17;45331:1;45313:20;;;;;;;45286:49;45267:3;;45220:126;;;;45356:23;45369:9;45356:12;:23::i;:::-;45389:33;45405:16;45389:15;:33::i;16345:626::-;-1:-1:-1;;;;;16601:15:17;;16491:4;16601:15;;;:7;:15;;;;;:24;;;16596:92;;-1:-1:-1;16653:23:17;16641:36;;16596:92;16734:22;;:::i;:::-;16759:45;;;;;;;;16781:6;-1:-1:-1;;;;;16774:26:17;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16774:28:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16774:28:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;16774:28:17;16759:45;;16734:70;-1:-1:-1;16814:42:17;16836:6;16734:70;16814:21;:42::i;:::-;16866:60;16889:6;16897:8;16907:11;16920:5;16866:22;:60::i;:::-;16949:14;16937:27;;;16345:626;;;;;;;:::o;2426:28:21:-;;;-1:-1:-1;;;;;2426:28:21;;:::o;273:27::-;;;-1:-1:-1;;;;;273:27:21;;:::o;44078:362:17:-;44169:13;;44131:4;;-1:-1:-1;;;;;44169:13:17;44155:10;:27;;:50;;-1:-1:-1;44200:5:17;;-1:-1:-1;;;;;44200:5:17;44186:10;:19;44155:50;44147:102;;;;-1:-1:-1;;;44147:102:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44281:5;;-1:-1:-1;;;;;44281:5:17;44267:10;:19;;:36;;-1:-1:-1;44299:4:17;44290:13;;;;44267:36;44259:71;;;;;-1:-1:-1;;;44259:71:17;;;;;;;;;;;;-1:-1:-1;;;44259:71:17;;;;;;;;;;;;;;;44341:19;:27;;;;;-1:-1:-1;;;44341:27:17;;-1:-1:-1;;;;44341:27:17;;;;;;;;;;44383:28;;;;;;;;;;;;;;;;;;-1:-1:-1;;;44383:28:17;;;;;;;;;;;;;;-1:-1:-1;44428:5:17;44078:362;;;;:::o;35194:1029::-;35266:4;35333:5;;-1:-1:-1;;;;;35333:5:17;35319:10;:19;35315:123;;35361:66;35366:18;35386:40;35361:4;:66::i;:::-;35354:73;;;;35315:123;35448:28;;:::i;:::-;-1:-1:-1;35479:39:17;;;;;;;;;;;;35528:19;;:::i;:::-;-1:-1:-1;35550:39:17;;;;;;;;;3022:7;35550:39;;35603:47;35622:17;35550:39;35603:18;:47::i;:::-;35599:158;;;35673:73;35678:26;35706:39;35673:4;:73::i;:::-;35666:80;;;;;;35599:158;35767:20;;:::i;:::-;-1:-1:-1;35790:39:17;;;;;;;;;3146:6;35790:39;;35843:41;35790:39;35866:17;35843:11;:41::i;:::-;35839:152;;;35907:73;35912:26;35940:39;35907:4;:73::i;:::-;35900:80;;;;;;;35839:152;36031:19;;;36060:44;;;;36119:59;;;;;;;;;;;;;;;;;;;;;;;;;36201:14;36196:20;36189:27;35194:1029;-1:-1:-1;;;;;;35194:1029:17:o;57067:365::-;57147:5;;-1:-1:-1;;;;;57147:5:17;57133:10;:19;57125:63;;;;;-1:-1:-1;;;57125:63:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;57223:15:17;;57199:21;57223:15;;;:7;:15;;;;;57256;;;;;;:23;;:15;:23;57248:63;;;;;-1:-1:-1;;;57248:63:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;57322:15;;;:23;;-1:-1:-1;;57322:23:17;;;57360:35;;;-1:-1:-1;;;;;57360:35:17;;;;57340:5;57360:35;;;;;;;;;;;;;;;;;57406:19;:17;:19::i;:::-;57067:365;;:::o;42693:495::-;-1:-1:-1;;;;;42784:24:17;;42760:4;42784:24;;;:7;:24;;;;;:33;;;42776:86;;;;-1:-1:-1;;;42776:86:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42894:13;;-1:-1:-1;;;;;42894:13:17;42880:10;:27;;:50;;-1:-1:-1;42925:5:17;;-1:-1:-1;;;;;42925:5:17;42911:10;:19;42880:50;42872:102;;;;-1:-1:-1;;;42872:102:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43006:5;;-1:-1:-1;;;;;43006:5:17;42992:10;:19;;:36;;-1:-1:-1;43024:4:17;43015:13;;;;42992:36;42984:71;;;;;-1:-1:-1;;;42984:71:17;;;;;;;;;;;;-1:-1:-1;;;42984:71:17;;;;;;;;;;;;;;;-1:-1:-1;;;;;43066:35:17;;;;;;:18;:35;;;;;;;;;:43;;;;;-1:-1:-1;;43066:43:17;;;;;;;;43124:35;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;43124:35:17;;;;;;;;;;;;;;-1:-1:-1;43176:5:17;42693:495;-1:-1:-1;42693:495:17:o;2460:31:21:-;;;-1:-1:-1;;;2460:31:21;;;;;:::o;10433:351:17:-;;;;;:::o;57719:89::-;57789:12;57719:89;;:::o;19893:527::-;;;;;;;:::o;952:40:21:-;;;;:::o;408:129:42:-;-1:-1:-1;;;;;493:30:42;470:4;493:30;;;:13;:30;;;;;:37;;408:129::o;45814:1404:17:-;45860:27;45890:10;45860:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;45860:40:17;;;;;;;;;;;;;;;;-1:-1:-1;45860:40:17;;-1:-1:-1;45916:6:17;;-1:-1:-1;;;;45911:294:17;45932:11;:18;45928:1;:22;45911:294;;;45971:13;45987:11;45999:1;45987:14;;;;;;;;;;;;;;45971:30;;46015:22;;:::i;:::-;46040:37;;;;;;;;46055:6;-1:-1:-1;;;;;46055:18:17;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46055:20:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46055:20:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;46055:20:17;46040:37;;46015:62;-1:-1:-1;46091:38:17;46121:6;46091:21;:38::i;:::-;46143:51;46173:6;46182:11;46143:21;:51::i;:::-;-1:-1:-1;;45952:3:17;;45911:294;;;;46215:23;;:::i;:::-;46241:18;;;;;;;;46256:1;46241:18;;;46215:44;;46269:22;46304:11;:18;46294:29;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;46269:54:17;-1:-1:-1;46338:6:17;46333:554;46354:11;:18;46350:1;:22;46333:554;;;46393:13;46409:11;46421:1;46409:14;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;46441:24:17;;;;;;:7;:24;;;;;;;:33;;;46409:14;;-1:-1:-1;46441:33:17;;46437:440;;;46494:21;;:::i;:::-;46518:50;;;;;;;;;;46533:6;;-1:-1:-1;;;46533:33:17;;;-1:-1:-1;;;;;46533:33:17;;;;;;;;;46518:50;;;;46533:6;;;:25;;:33;;;;;46518:50;46533:33;;;;;;:6;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;46533:33:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46533:33:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;46533:33:17;46518:50;;46494:74;-1:-1:-1;46586:27:17;;:::i;:::-;46616:73;46621:44;;;;;;;;46636:6;-1:-1:-1;;;;;46636:25:17;;:27;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;46636:27:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46636:27:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;46636:27:17;46621:44;;46667:21;;;-1:-1:-1;;;46667:21:17;;;;-1:-1:-1;;;;;46667:19:17;;;;;:21;;;;;46636:27;;46667:21;;;;;;;:19;:21;;;5:2:-1;;;;30:1;27;20:12;5:2;46667:21:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;46667:21:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;46667:21:17;46616:4;:73::i;:::-;46586:103;;46707:18;;:::i;:::-;46728:34;46733:16;46751:10;46728:4;:34::i;:::-;46707:55;;46795:7;46780:9;46790:1;46780:12;;;;;;;;;;;;;:22;;;;46835:27;46840:12;46854:7;46835:4;:27::i;:::-;46820:42;;46437:440;;;;-1:-1:-1;46374:3:17;;46333:554;;;-1:-1:-1;46902:6:17;46897:315;46918:11;:18;46914:1;:22;46897:315;;;46957:13;46973:10;46984:1;46973:13;;;;;;;;;;;;;;;;;47016:21;;-1:-1:-1;;;;;46973:13:17;;;;-1:-1:-1;47016:80:17;;47095:1;47016:80;;;47044:48;47049:8;;47059:32;47064:9;47074:1;47064:12;;;;;;;;;;;;;;47078;47059:4;:32::i;:::-;47044:4;:48::i;:::-;-1:-1:-1;;;;;47110:27:17;;;;;;:10;:27;;;;;;;;;:38;;;47167:34;;;;;;;47000:96;;-1:-1:-1;47110:27:17;;47167:34;;;;;;;;;;;-1:-1:-1;;46938:3:17;;46897:315;;26935:401;27107:4;27113;27119;27136:9;27147:14;27163;27181:98;27221:7;27237:12;27252;27266;27181:39;:98::i;:::-;27135:144;;;;;;27302:3;27297:9;;;;;;;;27289:40;-1:-1:-1;27308:9:17;;-1:-1:-1;27319:9:17;-1:-1:-1;;26935:401:17;;;;;;;;;:::o;9524:586::-;-1:-1:-1;;;;;9716:26:17;;9612:4;9716:26;;;:18;:26;;;;;;;;9715:27;9707:54;;;;;-1:-1:-1;;;9707:54:17;;;;;;;;;;;;-1:-1:-1;;;9707:54:17;;;;;;;;;;;;;;;-1:-1:-1;;;;;9848:15:17;;;;;;:7;:15;;;;;:24;;;9843:92;;9900:23;9895:29;9888:36;;;;9843:92;9981:29;10003:6;9981:21;:29::i;:::-;10020:45;10043:6;10051;10059:5;10020:22;:45::i;:::-;10088:14;10083:20;10076:27;;9524:586;;;;;;:::o;39164:1476::-;39254:4;39321:5;;-1:-1:-1;;;;;39321:5:17;39307:10;:19;39303:132;;39349:75;39354:18;39374:49;39349:4;:75::i;39303:132::-;39510:34;;:::i;:::-;-1:-1:-1;39547:48:17;;;;;;;;;;;;39605:34;;:::i;:::-;-1:-1:-1;39642:48:17;;;;;;;;;3421:6;39642:48;;39704:61;39716:23;39642:48;39704:11;:61::i;:::-;39700:190;;;39788:91;39793:35;39830:48;39788:4;:91::i;39700:190::-;39900:34;;:::i;:::-;-1:-1:-1;39937:48:17;;;;;;;;;3569:6;39937:48;;39999:61;39937:48;40036:23;39999:11;:61::i;:::-;39995:190;;;40083:91;40088:35;40125:48;40083:4;:91::i;39995:190::-;40279:28;;;40372:62;;;;40506:89;;;;;;;;;;;;;;;;;;;;;;;;;40618:14;40613:20;;12857:340;13100:17;;:37;;;;;13136:1;13121:12;:16;13100:37;13096:95;;;13153:27;;;-1:-1:-1;;;13153:27:17;;;;;;;;;;;;-1:-1:-1;;;13153:27:17;;;;;;;;;;;;;;3054:26:21;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3054:26:21;;-1:-1:-1;3054:26:21;:::o;34345:556:17:-;34409:4;34476:5;;-1:-1:-1;;;;;34476:5:17;34462:10;:19;34458:123;;34504:66;34509:18;34529:40;34504:4;:66::i;34458:123::-;34667:6;;;-1:-1:-1;;;;;34733:18:17;;;-1:-1:-1;;;;;;34733:18:17;;;;;;;34820:36;;;34667:6;;;;34820:36;;;;;;;;;;;;;;;;;;;;;;;34879:14;34867:27;34345:556;-1:-1:-1;;;34345:556:17:o;120:23:42:-;;;;:::o;15546:312:17:-;15795:57;;25582:264;25649:4;25655;25661;25678:9;25689:14;25705;25723:65;25763:7;25779:1;25783;25786;25723:39;:65::i;:::-;25677:111;;;;;;25812:3;25807:9;;;;;;;;25799:40;25818:9;;-1:-1:-1;25818:9:17;-1:-1:-1;25582:264:17;-1:-1:-1;;;25582:264:17:o;42095:592::-;42164:4;42198:5;;-1:-1:-1;;;;;42198:5:17;42184:10;:19;42180:125;;42226:68;42231:18;42251:42;42226:4;:68::i;42180:125::-;42393:13;;;-1:-1:-1;;;;;42476:32:17;;;-1:-1:-1;;;;;;42476:32:17;;;;;;;42593:49;;;42393:13;;;42593:49;;;42628:13;;;;42593:49;;;;;;;;;;;;;;;;42665:14;42660:20;;18169:1260;-1:-1:-1;;;;;18442:23:17;;18366:4;18442:23;;;:7;:23;;;;;:32;;;18441:33;;:72;;-1:-1:-1;;;;;;18479:25:17;;;;;;:7;:25;;;;;:34;;;18478:35;18441:72;18437:139;;;18541:23;18536:29;18529:36;;;;18437:139;18662:9;18675:14;18693:37;18721:8;18693:27;:37::i;:::-;18661:69;;-1:-1:-1;18661:69:17;;-1:-1:-1;18751:14:17;;-1:-1:-1;18744:3:17;:21;;;;;;;;;18740:68;;18793:3;18788:9;;;;;;;;18781:16;;;;;;18740:68;18821:14;18817:86;;18863:28;18858:34;;18817:86;19001:18;19029:14;-1:-1:-1;;;;;19022:42:17;;19065:8;19022:52;;;;;;;;;;;;;-1:-1:-1;;;;;19022:52:17;-1:-1:-1;;;;;19022:52:17;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;19022:52:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;19022:52:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;19022:52:17;19139:36;;;19022:52;19139:36;;;;;19154:19;;19139:36;;19022:52;;-1:-1:-1;19085:17:17;;;;19121:70;;19022:52;19121:17;:70::i;:::-;19084:107;;-1:-1:-1;19084:107:17;-1:-1:-1;19216:18:17;19205:7;:29;;;;;;;;;19201:89;;19262:16;19257:22;19250:29;;;;;;;;;19201:89;19317:8;19303:11;:22;19299:86;;;19353:20;19348:26;;19299:86;19407:14;19395:27;;;;;;;18169:1260;;;;;;;;:::o;54127:933::-;54251:6;54246:808;54267:7;:14;54263:1;:18;54246:808;;;54302:13;54318:7;54326:1;54318:10;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;54350:24:17;;;;;;:7;:24;;;;;;;:33;54318:10;;-1:-1:-1;54350:33:17;;54342:67;;;;;-1:-1:-1;;;54342:67:17;;;;;;;;;;;;-1:-1:-1;;;54342:67:17;;;;;;;;;;;;;;;54440:4;54427:17;;;;54423:357;;;54464:22;;:::i;:::-;54489:37;;;;;;;;54504:6;-1:-1:-1;;;;;54504:18:17;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;54504:20:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;54504:20:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;54504:20:17;54489:37;;54464:62;-1:-1:-1;54544:51:17;54574:6;54464:62;54544:21;:51::i;:::-;54618:6;54613:153;54634:7;:14;54630:1;:18;54613:153;;;54677:70;54708:6;54717:7;54725:1;54717:10;;;;;;;;;;;;;;54729:11;54742:4;54677:22;:70::i;:::-;54650:3;;54613:153;;;;54423:357;;54810:4;54797:17;;;;54793:251;;;54834:38;54864:6;54834:21;:38::i;:::-;54895:6;54890:140;54911:7;:14;54907:1;:18;54890:140;;;54954:57;54985:6;54994:7;55002:1;54994:10;;;;;;;;;;;;;;55006:4;54954:22;:57::i;:::-;54927:3;;54890:140;;;;54793:251;-1:-1:-1;54283:3:17;;54246:808;;55252:267;55315:21;:19;:21::i;:::-;55307:65;;;;;-1:-1:-1;;;55307:65:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;55398:8;;;55416:20;;;;55451:31;;;;;;;;;;;;;;;;;;;;;;;;;55493:19;:17;:19::i;3375:58:21:-;;;;;;;;;;;;-1:-1:-1;;;;;3375:58:21;;;-1:-1:-1;;;3375:58:21;;;;;:::o;2669:52::-;;;;;;;;;;;;;;;:::o;2613:50::-;;;;;;;;;;;;;;;:::o;2743::17:-;2785:8;2743:50;:::o;663:25:21:-;;;-1:-1:-1;;;;;663:25:21;;:::o;2536:34::-;;;-1:-1:-1;;;2536:34:21;;;;;:::o;3501:58::-;;;;;;;;;;;;-1:-1:-1;;;;;3501:58:21;;;-1:-1:-1;;;3501:58:21;;;;;:::o;2114:41::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;43701:371:17:-;43795:13;;43757:4;;-1:-1:-1;;;;;43795:13:17;43781:10;:27;;:50;;-1:-1:-1;43826:5:17;;-1:-1:-1;;;;;43826:5:17;43812:10;:19;43781:50;43773:102;;;;-1:-1:-1;;;43773:102:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;43907:5;;-1:-1:-1;;;;;43907:5:17;43893:10;:19;;:36;;-1:-1:-1;43925:4:17;43916:13;;;;43893:36;43885:71;;;;;-1:-1:-1;;;43885:71:17;;;;;;;;;;;;-1:-1:-1;;;43885:71:17;;;;;;;;;;;;;;;43967:22;:30;;;;;-1:-1:-1;;;43967:30:17;;-1:-1:-1;;;;43967:30:17;;;;;;;;;;44012:31;;;;;;;;;;;;;;;;;;-1:-1:-1;;;44012:31:17;;;;;;;;;;;;;;-1:-1:-1;44060:5:17;43701:371::o;4334:161::-;-1:-1:-1;;;;;4437:24:17;;;4414:4;4437:24;;;:7;:24;;;;;;;;:51;;;;;:42;;;;:51;;;;;;4334:161;;;;:::o;1117:21:21:-;;;;:::o;44446:419:17:-;44612:10;-1:-1:-1;;;;;44612:16:17;;:18;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44612:18:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44612:18:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;44612:18:17;-1:-1:-1;;;;;44598:32:17;:10;:32;44590:84;;;;-1:-1:-1;;;44590:84:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44692:10;-1:-1:-1;;;;;44692:32:17;;:34;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44692:34:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44692:34:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;44692:34:17;:39;44684:73;;;;;-1:-1:-1;;;44684:73:17;;;;;;;;;;;;-1:-1:-1;;;44684:73:17;;;;;;;;;;;;;;;44788:10;-1:-1:-1;;;;;44768:42:17;;44811:9;44822:16;44840:17;44768:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;44768:90:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;44768:90:17;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;44768:90:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;44768:90:17;;;;44446:419;;;;:::o;57917:122::-;57990:42;57917:122;:::o;40959:654::-;41016:4;41050:5;;-1:-1:-1;;;;;41050:5:17;41036:10;:19;41032:121;;41078:64;41083:18;41103:38;41078:4;:64::i;41032:121::-;-1:-1:-1;;;;;41167:24:17;;;;;;:7;:24;;;;;:33;;;41163:139;;;41223:68;41228:27;41257:33;41223:4;:68::i;41163:139::-;41312:6;-1:-1:-1;;;;;41312:15:17;;:17;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;41312:17:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;41312:17:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;41416:70:17;;;;;;;;41434:4;41416:70;;;-1:-1:-1;41312:17:17;41416:70;;;;;;;;;;;;-1:-1:-1;;;;;41389:24:17;;;;:7;:24;;;;;;;:97;;;;;;;-1:-1:-1;;41389:97:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41497:35;41405:6;41497:18;:35::i;:::-;41548:20;;;-1:-1:-1;;;;;41548:20:17;;;;;;;;;;;;;;;41591:14;41579:27;40959:654;-1:-1:-1;;40959:654:17:o;2852:47::-;2895:4;2852:47;:::o;321:81:42:-;375:11;:20;321:81::o;3162:20:21:-;;;;:::o;3895:170:17:-;3956:15;3983:24;4010:13;:22;4024:7;-1:-1:-1;;;;;4010:22:17;-1:-1:-1;;;;;4010:22:17;;;;;;;;;;;;3983:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3983:49:17;;;;;;;;;;;;;;;;-1:-1:-1;3983:49:17;;3895:170;-1:-1:-1;;;;;;;3895:170:17:o;2576:31:21:-;;;-1:-1:-1;;;2576:31:21;;;;;:::o;57616:97:17:-;57662:15;57696:10;57689:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;57689:17:17;;;;;;;;;;;;;;;;;;;;;;;57616:97;:::o;3676:69:21:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;364:40::-;;;-1:-1:-1;;;;;364:40:21;;:::o;23199:761:17:-;23409:22;;23305:4;;-1:-1:-1;;;23409:22:17;;;;23408:23;23400:54;;;;;-1:-1:-1;;;23400:54:17;;;;;;;;;;;;-1:-1:-1;;;23400:54:17;;;;;;;;;;;;;;;23585:12;23600:50;23622:6;23630:3;23635:14;23600:21;:50::i;:::-;23585:65;-1:-1:-1;23664:31:17;;23660:76;;23718:7;-1:-1:-1;23711:14:17;;23660:76;23782:29;23804:6;23782:21;:29::i;:::-;23821:42;23844:6;23852:3;23857:5;23821:22;:42::i;:::-;23873;23896:6;23904:3;23909:5;23873:22;:42::i;543:96:42:-;-1:-1:-1;;;;;591:24:42;627:5;591:24;;;:7;:24;;;;;:41;;-1:-1:-1;;591:41:42;;;543:96::o;4754:368:17:-;4818:13;4843:8;4854:7;:14;4843:25;;4879:21;4914:3;4903:15;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;136:17;;-1:-1;4903:15:17;-1:-1:-1;4879:39:17;-1:-1:-1;4933:6:17;4928:163;4949:3;4945:1;:7;4928:163;;;4973:13;4996:7;5004:1;4996:10;;;;;;;;;;;;;;4973:34;;5040:39;5060:6;5068:10;5040:19;:39::i;:::-;5035:45;;;;;;;;5022:7;5030:1;5022:10;;;;;;;;;;;;;;;;;:58;-1:-1:-1;4954:3:17;;4928:163;;;-1:-1:-1;5108:7:17;4754:368;-1:-1:-1;;;4754:368:17:o;32140:1949::-;32396:6;;;:49;;;-1:-1:-1;;;32396:49:17;;-1:-1:-1;;;;;32396:49:17;;;;;;;;;;;;32276:4;;;;;;32396:6;;;:25;;:49;;;;;;;;;;;;;;;:6;:49;;;5:2:-1;;;;30:1;27;20:12;5:2;32396:49:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32396:49:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;32396:49:17;32486:6;;;:51;;;-1:-1:-1;;;32486:51:17;;-1:-1:-1;;;;;32486:51:17;;;;;;;;;;;;32396:49;;-1:-1:-1;32455:28:17;;32486:6;;;;;:25;;:51;;;;;32396:49;;32486:51;;;;;;;;:6;:51;;;5:2:-1;;;;30:1;27;20:12;5:2;32486:51:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;32486:51:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;32486:51:17;;-1:-1:-1;32551:26:17;;;:58;;-1:-1:-1;32581:28:17;;32551:58;32547:124;;;32638:17;32625:35;-1:-1:-1;32658:1:17;;-1:-1:-1;32625:35:17;;-1:-1:-1;;32625:35:17;32547:124;33056:25;33091:16;-1:-1:-1;;;;;33084:43:17;;:45;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;33084:45:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;33084:45:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;33084:45:17;;-1:-1:-1;33165:16:17;33191:20;;:::i;:::-;33221:22;;:::i;:::-;33253:16;;:::i;:::-;33279:17;33330:59;33337:28;;33367:21;33330:6;:59::i;:::-;33307:82;-1:-1:-1;33307:82:17;-1:-1:-1;33414:18:17;33403:7;:29;;;;;;;;;33399:94;;33461:16;33456:22;33448:34;-1:-1:-1;33480:1:17;;-1:-1:-1;33448:34:17;;-1:-1:-1;;;;;;;;33448:34:17;33399:94;33528:53;33535:23;33560:20;33528:6;:53::i;:::-;33503:78;-1:-1:-1;33503:78:17;-1:-1:-1;33606:18:17;33595:7;:29;;;;;;;;;33591:94;;33653:16;33648:22;;33591:94;33714:30;33721:9;33732:11;33714:6;:30::i;:::-;33695:49;-1:-1:-1;33695:49:17;-1:-1:-1;33769:18:17;33758:7;:29;;;;;;;;;33754:94;;33816:16;33811:22;;33754:94;33883:43;33901:5;33908:17;33883;:43::i;:::-;33858:68;-1:-1:-1;33858:68:17;-1:-1:-1;33951:18:17;33940:7;:29;;;;;;;;;33936:94;;33998:16;33993:22;;33936:94;34053:14;34040:42;-1:-1:-1;34070:11:17;;-1:-1:-1;;;;;;;;32140:1949:17;;;;;;;:::o;3862:69:21:-;;;;;;;;;;;;;;;;;;;;;;;;:::o;4008:43::-;;;;;;;;;;;;;:::o;55685:280:17:-;55761:21;:19;:21::i;:::-;55753:64;;;;;-1:-1:-1;;;55753:64:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;55833:6;55828:101;55849:7;:14;55845:1;:18;55828:101;;;55884:34;55907:7;55915:1;55907:10;;;;;;;;;;;;;;55884:22;:34::i;:::-;55865:3;;55828:101;;;;55939:19;:17;:19::i;:::-;55685:280;:::o;20873:960::-;21164:19;;21060:4;;-1:-1:-1;;;21164:19:17;;;;21163:20;21155:48;;;;;-1:-1:-1;;;21155:48:17;;;;;;;;;;;;-1:-1:-1;;;21155:48:17;;;;;;;;;;;;;;;-1:-1:-1;;;;;21275:25:17;;;;;;:7;:25;;;;;:34;;;21274:35;;:72;;-1:-1:-1;;;;;;21314:23:17;;;;;;:7;:23;;;;;:32;;;21313:33;21274:72;21270:139;;;21374:23;21369:29;;21270:139;21472:14;-1:-1:-1;;;;;21465:34:17;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21465:36:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21465:36:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21465:36:17;21423:38;;;-1:-1:-1;;;21423:38:17;;;;-1:-1:-1;;;;;21423:78:17;;;;:36;;;;;:38;;;;;21465:36;;21423:38;;;;;;;:36;:38;;;5:2:-1;;;;30:1;27;20:12;5:2;21423:38:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21423:38:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;21423:38:17;-1:-1:-1;;;;;21423:78:17;;21419:148;;21529:26;21524:32;;21419:148;21613:39;21635:16;21613:21;:39::i;:::-;21662:57;21685:16;21703:8;21713:5;21662:22;:57::i;:::-;21729:59;21752:16;21770:10;21782:5;21729:22;:59::i;:::-;21811:14;21799:27;20873:960;-1:-1:-1;;;;;;20873:960:17:o;38468:403::-;38528:4;38595:5;;-1:-1:-1;;;;;38595:5:17;38581:10;:19;38577:121;;38623:64;38628:18;38648:38;38623:4;:64::i;38577:121::-;38728:9;;;38747:24;;;;38786:40;;;;;;;;;;;;;;;;;;;;;;;;;38849:14;38844:20;;13629:1618;-1:-1:-1;;;;;13827:28:17;;13723:4;13827:28;;;:20;:28;;;;;;;;13826:29;13818:58;;;;;-1:-1:-1;;;13818:58:17;;;;;;;;;;;;-1:-1:-1;;;13818:58:17;;;;;;;;;;;;;;;-1:-1:-1;;;;;13892:15:17;;;;;;:7;:15;;;;;:24;;;13887:92;;13944:23;13939:29;;13887:92;-1:-1:-1;;;;;13994:15:17;;;;;;;:7;:15;;;;;;;;:43;;;;;:33;;;;:43;;;;;;13989:562;;14138:10;-1:-1:-1;;;;;14138:20:17;;;14130:54;;;;;-1:-1:-1;;;14130:54:17;;;;;;;;;;;;-1:-1:-1;;;14130:54:17;;;;;;;;;;;;;;;14252:9;14264:49;14291:10;14304:8;14264:19;:49::i;:::-;14252:61;-1:-1:-1;14338:14:17;14331:3;:21;;;;;;;;;14327:76;;14384:3;14379:9;;;;;;;;14372:16;;;;;14327:76;-1:-1:-1;;;;;14496:15:17;;;;;;;:7;:15;;;;;;;;:43;;;;;:33;;;;:43;;;;;;14489:51;;;;13989:562;;14565:6;;;:41;;;-1:-1:-1;;;14565:41:17;;-1:-1:-1;;;;;14565:41:17;;;;;;;;;;;;:6;;;;;:25;;:41;;;;;;;;;;;;;;;:6;:41;;;5:2:-1;;;;30:1;27;20:12;5:2;14565:41:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14565:41:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;14565:41:17;14561:107;;14639:17;14634:23;;14561:107;14679:9;14692:14;14710:82;14750:8;14767:6;14776:1;14779:12;14710:39;:82::i;:::-;14678:114;;-1:-1:-1;14678:114:17;;-1:-1:-1;14813:14:17;;-1:-1:-1;14806:3:17;:21;;;;;;;;;14802:68;;14855:3;14850:9;;;;;;;;14843:16;;;;;;14802:68;14883:13;;14879:85;;14924:28;14919:34;;14879:85;15010:22;;:::i;:::-;15035:45;;;;;;;;15057:6;-1:-1:-1;;;;;15050:26:17;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15050:28:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15050:28:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;15050:28:17;15035:45;;15010:70;-1:-1:-1;15090:42:17;15112:6;15010:70;15090:21;:42::i;:::-;15142:60;15165:6;15173:8;15183:11;15196:5;15142:22;:60::i;:::-;15225:14;15213:27;13629:1618;-1:-1:-1;;;;;;;13629:1618:17:o;1240:49:21:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1240:49:21;;-1:-1:-1;1240:49:21;;-1:-1:-1;1240:49:21:o;469:47::-;;;-1:-1:-1;;;;;469:47:21;;:::o;36588:1606:17:-;36685:4;36752:5;;-1:-1:-1;;;;;36752:5:17;36738:10;:19;36734:128;;36780:71;36785:18;36805:45;36780:4;:71::i;:::-;36773:78;;;;36734:128;-1:-1:-1;;;;;36931:24:17;;36907:21;36931:24;;;:7;:24;;;;;36970:15;;;;36965:128;;37008:74;37013:23;37038:43;37008:4;:74::i;:::-;37001:81;;;;;36965:128;37103:33;;:::i;:::-;-1:-1:-1;37139:44:17;;;;;;;;;;;;37236:20;;:::i;:::-;-1:-1:-1;37259:44:17;;;;;;;;;3276:6;37259:44;;37317:46;37259:44;37340:22;37317:11;:46::i;:::-;37313:167;;;37386:83;37391:31;37424:44;37386:4;:83::i;:::-;37379:90;;;;;;;37313:167;37551:32;;;;;:74;;-1:-1:-1;37587:6:17;;;:33;;;-1:-1:-1;;;37587:33:17;;-1:-1:-1;;;;;37587:33:17;;;;;;;;;;;;:6;;;;;:25;;:33;;;;;;;;;;;;;;;:6;:33;;;5:2:-1;;;;30:1;27;20:12;5:2;37587:33:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37587:33:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;37587:33:17;:38;37551:74;37547:184;;;37648:72;37653:17;37672:47;37648:4;:72::i;37547:184::-;37863:31;;;;;37904:61;;;;38064:85;;;-1:-1:-1;;;;;38064:85:17;;;;;;;;;;;;;;;;;;;;;;;;;;;38172:14;38160:27;36588:1606;-1:-1:-1;;;;;;;36588:1606:17:o;2497:33:21:-;;;-1:-1:-1;;;2497:33:21;;;;;:::o;805:31::-;;;;:::o;53284:95:17:-;53343:29;53353:6;53361:10;53343:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;53343:29:17;;;;;;;;;;;;;;;;;;;;;:9;:29::i;11226:441::-;11320:4;11336:12;11351:53;11373:6;11381:8;11391:12;11351:21;:53::i;:::-;11336:68;-1:-1:-1;11418:31:17;;11414:76;;11472:7;-1:-1:-1;11465:14:17;;11414:76;11536:29;11558:6;11536:21;:29::i;:::-;11575:47;11598:6;11606:8;11616:5;11575:22;:47::i;:::-;11645:14;11633:27;11226:441;-1:-1:-1;;;;;11226:441:17:o;6929:2127::-;6990:4;7006:13;7029;7006:37;;7132:9;7143:15;7160;7181:6;-1:-1:-1;;;;;7181:25:17;;7207:10;7181:37;;;;;;;;;;;;;-1:-1:-1;;;;;7181:37:17;-1:-1:-1;;;;;7181:37:17;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7181:37:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7181:37:17;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;7181:37:17;;;;;;;;;;;;;-1:-1:-1;7181:37:17;;-1:-1:-1;7181:37:17;-1:-1:-1;7236:9:17;;7228:59;;;;-1:-1:-1;;;7228:59:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7382:15;;7378:125;;7420:72;7425:28;7455:36;7420:4;:72::i;:::-;7413:79;;;;;;;;7378:125;7593:12;7608:60;7630:13;7645:10;7657;7608:21;:60::i;:::-;7593:75;-1:-1:-1;7682:12:17;;7678:121;;7717:71;7728:15;7745:33;7780:7;7717:10;:71::i;:::-;7710:78;;;;;;;;;7678:121;-1:-1:-1;;;;;7839:24:17;;7809:27;7839:24;;;:7;:24;;;;;;;;7985:10;7954:42;;:30;;;:42;;;;;;;;;7949:101;;8024:14;8012:27;;;;;;;;;;7949:101;8151:10;8120:42;;;;:30;;;:42;;;;;;;;8113:49;;-1:-1:-1;;8113:49:17;;;8318:13;:25;;;;;;8286:57;;;;;;;;;;;;;;;;;:29;;:57;;;8318:25;8286:57;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8286:57:17;;;;;;;;;;;;;;;;-1:-1:-1;;8364:20:17;;8286:57;;-1:-1:-1;8364:20:17;;-1:-1:-1;8353:8:17;;-1:-1:-1;;8425:157:17;8446:3;8442:1;:7;8425:157;;;8494:6;-1:-1:-1;;;;;8474:26:17;:13;8488:1;8474:16;;;;;;;;;;;;;;-1:-1:-1;;;;;8474:26:17;;8470:102;;;8533:1;8520:14;;8552:5;;8470:102;8451:3;;8425:157;;;;8708:3;8695:10;:16;8688:24;;;;8855:10;8811:27;8841:25;;;:13;:25;;;;;8912:17;;8841:25;;-1:-1:-1;;8912:21:17;;;8901:33;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8901:33:17;8876:10;8887;8876:22;;;;;;;;;;;;;;;;;:58;;-1:-1:-1;;;;;;8876:58:17;-1:-1:-1;;;;;8876:58:17;;;;;;;;;;8944:19;;;;-1:-1:-1;;8944:19:17;;;:::i;:::-;-1:-1:-1;8979:32:17;;;-1:-1:-1;;;;;8979:32:17;;;;9000:10;8979:32;;;;;;;;;;;;;;;;;9034:14;9022:27;6929:2127;-1:-1:-1;;;;;;;;;;;;6929:2127:17:o;177:20:21:-;;;-1:-1:-1;;;;;177:20:21;;:::o;193:122:42:-;259:11;:21;;;;;;;;193:122;;;:::o;41619:245:17:-;41687:6;41682:135;41703:10;:17;41699:21;;41682:135;;;41774:6;-1:-1:-1;;;;;41750:31:17;:10;41761:1;41750:13;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;41750:13:17;:31;;41742:64;;;;;-1:-1:-1;;;41742:64:17;;;;;;;;;;;;-1:-1:-1;;;41742:64:17;;;;;;;;;;;;;;;41722:4;;41682:135;;;-1:-1:-1;41826:10:17;27::-1;;39:1;23:18;;45:23;;-1:-1;41826:31:17;;;;;;;;-1:-1:-1;;;;;;41826:31:17;-1:-1:-1;;;;;41826:31:17;;;;;;;;;;41619:245::o;48554:1086::-;-1:-1:-1;;;;;48688:23:17;;48650:35;48688:23;;;:15;:23;;;;;;;;48740:10;:18;;;;;;48688:23;;48787:16;:14;:16::i;:::-;48855:17;;48768:35;;-1:-1:-1;48813:16:17;;48832:42;;48768:35;;-1:-1:-1;;;48855:17:17;;;;48832:4;:42::i;:::-;48813:61;;48902:1;48888:11;:15;:34;;;;;48921:1;48907:11;:15;48888:34;48884:750;;;48938:17;48958:54;48970:6;-1:-1:-1;;;;;48963:27:17;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;48963:29:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;48963:29:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;48963:29:17;48994:17;48958:4;:54::i;:::-;48938:74;;49026:16;49045:30;49050:11;49063;49045:4;:30::i;:::-;49026:49;;49089:19;;:::i;:::-;49126:1;49111:12;:16;:78;;49168:21;;;;;;;;49186:1;49168:21;;;49111:78;;;49130:35;49139:11;49152:12;49130:8;:35::i;:::-;49089:100;;49203:19;;:::i;:::-;49230:37;;;;;;;;;49248:17;;-1:-1:-1;;;;;49248:17:17;49230:37;;49225:50;;49269:5;49225:4;:50::i;:::-;49203:72;;49315:185;;;;;;;;49356:53;49364:5;:14;;;49356:53;;;;;;;;;;;;;;;;;:7;:53::i;:::-;-1:-1:-1;;;;;49315:185:17;;;;;49434:51;49441:11;49434:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;49434:51:17;;;:6;:51::i;:::-;49315:185;;;;;;;-1:-1:-1;;;;;49289:23:17;;;;;;:15;:23;;;;;;;;:211;;;;;;;;;;;;-1:-1:-1;;;49289:211:17;-1:-1:-1;;;;;49289:211:17;;;-1:-1:-1;;;;;;49289:211:17;;;;;;;;;;;;;;-1:-1:-1;48884:750:17;;-1:-1:-1;;;48884:750:17;;49521:15;;49517:117;;49572:51;49579:11;49572:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;49572:51:17;;;:6;:51::i;:::-;49552:71;;;;;;;-1:-1:-1;;;49552:71:17;-1:-1:-1;;;;;49552:71:17;;;;;;48554:1086;;;;;;:::o;51274:1040::-;-1:-1:-1;;;;;51447:23:17;;51409:35;51447:23;;;:15;:23;;;;;51480:25;;:::i;:::-;-1:-1:-1;51508:37:17;;;;;;;;;51526:17;;-1:-1:-1;;;;;51526:17:17;51508:37;;51555:27;;:::i;:::-;-1:-1:-1;51585:55:17;;;;;;;;;-1:-1:-1;;;;;51603:25:17;;;-1:-1:-1;51603:25:17;;;:17;:25;;;;;:35;;;;;;;;;;;;;;51585:55;;51688:20;;51650:35;;;;;;:58;;;;51723:22;;:26;51719:589;;51765:24;;:::i;:::-;51792:32;51797:11;51810:13;51792:4;:32::i;:::-;51765:59;;51838:19;51860:69;51872:6;-1:-1:-1;;;;;51865:34:17;;51900:8;51865:44;;;;;;;;;;;;;-1:-1:-1;;;;;51865:44:17;-1:-1:-1;;;;;51865:44:17;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51865:44:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;51865:44:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;51865:44:17;51911:17;51860:4;:69::i;:::-;51838:91;;51943:18;51964:32;51969:14;51985:10;51964:4;:32::i;:::-;-1:-1:-1;;;;;52038:21:17;;52010:20;52038:21;;;:11;:21;;;;;;51943:53;;-1:-1:-1;52010:20:17;52033:42;;51943:53;52033:4;:42::i;:::-;52010:65;;52113:79;52126:8;52136:15;52153:13;:38;;2785:8;52153:38;;;52169:1;52153:38;52113:12;:79::i;:::-;-1:-1:-1;;;;;52089:21:17;;;;;;;:11;:21;;;;;;;;;:103;;;;52276:20;;52211:86;;;;;;;;;;;52089:21;;52211:86;;;;;;;;;;;;;;;51719:589;;;;;51274:1040;;;;;;;:::o;1855:149:24:-;1916:4;1937:33;1950:3;1945:9;;;;;;;;1961:4;1956:10;;;;;;;;1937:33;;;;;;;;;;;;;1968:1;1937:33;;;;;;;;;;;;;1993:3;1988:9;;;;;;;7723:147:25;7849:14;7832:13;;:31;;;7723:147::o;7517:139::-;7635:14;7619:13;;:30;;7517:139::o;47371:1030:17:-;-1:-1:-1;;;;;47475:23:17;;47437:35;47475:23;;;:15;:23;;;;;;;;47527:10;:18;;;;;;47475:23;;47574:16;:14;:16::i;:::-;47642:17;;47555:35;;-1:-1:-1;47600:16:17;;47619:42;;47555:35;;-1:-1:-1;;;47642:17:17;;;;47619:4;:42::i;:::-;47600:61;;47689:1;47675:11;:15;:34;;;;;47708:1;47694:11;:15;47675:34;47671:724;;;47725:17;47752:6;-1:-1:-1;;;;;47745:26:17;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;47745:28:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;47745:28:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;47745:28:17;;-1:-1:-1;47787:16:17;47806:30;47811:11;47824;47806:4;:30::i;:::-;47787:49;;47850:19;;:::i;:::-;47887:1;47872:12;:16;:78;;47929:21;;;;;;;;47947:1;47929:21;;;47872:78;;;47891:35;47900:11;47913:12;47891:8;:35::i;:::-;47850:100;;47964:19;;:::i;:::-;47991:37;;;;;;;;;48009:17;;-1:-1:-1;;;;;48009:17:17;47991:37;;47986:50;;48030:5;47986:4;:50::i;:::-;47964:72;;48076:185;;;;;;;;48117:53;48125:5;:14;;;48117:53;;;;;;;;;;;;;;;;;:7;:53::i;:::-;-1:-1:-1;;;;;48076:185:17;;;;;48195:51;48202:11;48195:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;48195:51:17;;;:6;:51::i;:::-;48076:185;;;;;;;-1:-1:-1;;;;;48050:23:17;;;;;;:15;:23;;;;;;;;:211;;;;;;;;;;;;-1:-1:-1;;;48050:211:17;-1:-1:-1;;;;;48050:211:17;;;-1:-1:-1;;;;;;48050:211:17;;;;;;;;;;;;;;-1:-1:-1;47671:724:17;;-1:-1:-1;;;47671:724:17;;48282:15;;48278:117;;48333:51;48340:11;48333:51;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;48333:51:17;;;:6;:51::i;:::-;48313:71;;;;;;;-1:-1:-1;;;48313:71:17;-1:-1:-1;;;;;48313:71:17;;;;;;47371:1030;;;;;:::o;9976:131:25:-;10035:10;;:::i;:::-;10064:36;;;;;;;;10079:19;10084:1;:10;;;10096:1;10079:4;:19::i;:::-;10064:36;;10057:43;9976:131;-1:-1:-1;;;9976:131:25:o;9813:157::-;9878:10;;:::i;:::-;9907:56;;;;;;;;447:4;9922:28;9927:1;:10;;;9939:1;:10;;;9922:4;:28::i;:::-;:39;;;;;;9907:56;;9900:63;9813:157;-1:-1:-1;;;9813:157:25:o;8595:146::-;8660:10;;:::i;:::-;8689:45;;;;;;;;8704:28;8709:1;:10;;;8721:1;:10;;;8704:4;:28::i;11068:162::-;11133:10;;:::i;:::-;11162:61;;;;;;;;11177:44;11182:26;11187:1;:10;;;447:4;11182;:26::i;:::-;11210:10;;11177:4;:44::i;10113:119::-;10172:4;447;10195:19;10200:1;10203;:10;;;10195:4;:19::i;:::-;:30;;;;;;;10113:119;-1:-1:-1;;;10113:119:25:o;28101:3511:17:-;28282:5;28289:4;28295;28312:37;;:::i;:::-;-1:-1:-1;;;;;28509:22:17;;28396:9;28509:22;;;:13;:22;;;;;;;;28484:47;;;;;;;;;;;;;;;;;28396:9;;28484:22;;:47;28509:22;28484:47;;;28509:22;28484:47;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;28484:47:17;;;;;;;;;;;;;;;;-1:-1:-1;28484:47:17;;-1:-1:-1;28546:6:17;;-1:-1:-1;;;;28541:2728:17;28562:6;:13;28558:1;:17;28541:2728;;;28596:12;28611:6;28618:1;28611:9;;;;;;;;;;;;;;28596:24;;28778:5;-1:-1:-1;;;;;28778:24:17;;28803:7;28778:33;;;;;;;;;;;;;-1:-1:-1;;;;;28778:33:17;-1:-1:-1;;;;;28778:33:17;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;28778:33:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;28778:33:17;;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;28778:33:17;;;;;;;;;;;;;;;;;28749:25;;28702:109;28729:18;;;28702:109;;;;28709:18;;;28702:109;;;;28778:33;-1:-1:-1;28829:9:17;;28825:164;;-1:-1:-1;28947:20:17;;-1:-1:-1;28969:1:17;;-1:-1:-1;28969:1:17;;-1:-1:-1;28939:35:17;;-1:-1:-1;;;;;28939:35:17;28825:164;29026:65;;;;;;;;;-1:-1:-1;;;;;29041:23:17;;;-1:-1:-1;29041:23:17;;;:7;:23;;;;;:48;;;29026:65;;29002:21;;;:89;;;;29125:42;;;;;;;-1:-1:-1;;;29140:25:17;29125:42;;29105:17;;;:62;29262:6;;;:32;;-1:-1:-1;;;29262:32:17;;;;;;;;;;;:6;;;:25;;:32;;;;;29026:65;29262:32;;;;;:6;:32;;;5:2:-1;;;;30:1;27;20:12;5:2;29262:32:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;29262:32:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;29262:32:17;29235:24;;;:59;;;29308:100;;-1:-1:-1;29369:17:17;;-1:-1:-1;29388:1:17;;-1:-1:-1;29388:1:17;;-1:-1:-1;29361:32:17;;-1:-1:-1;;;;;29361:32:17;29308:100;29440:41;;;;;;;;;29455:24;;;;29440:41;;29421:16;;;:60;;;29626:21;;;;29649:17;;;;29618:67;;:7;:67::i;:::-;29596:18;;;29589:96;;-1:-1:-1;29711:18:17;29703:4;:26;;;;;;;;;29699:96;;-1:-1:-1;29757:16:17;;-1:-1:-1;29775:1:17;;-1:-1:-1;29775:1:17;;-1:-1:-1;29749:31:17;;-1:-1:-1;;;;;29749:31:17;29699:96;29900:84;29925:4;:18;;;29945:4;:18;;;29965:4;:18;;;29900:24;:84::i;:::-;29871:113;;;-1:-1:-1;29878:18:17;30002:4;:26;;;;;;;;;29998:96;;-1:-1:-1;30056:16:17;;-1:-1:-1;30074:1:17;;-1:-1:-1;30074:1:17;;-1:-1:-1;30048:31:17;;-1:-1:-1;;;;;30048:31:17;29998:96;30211:89;30236:4;:16;;;30254:4;:18;;;30274:4;:25;;;30211:24;:89::i;:::-;30182:25;;;30175:125;;-1:-1:-1;30326:18:17;30318:4;:26;;;;;;;;;30314:96;;-1:-1:-1;30372:16:17;;-1:-1:-1;30390:1:17;;-1:-1:-1;30390:1:17;;-1:-1:-1;30364:31:17;;-1:-1:-1;;;;;30364:31:17;30314:96;30503:12;-1:-1:-1;;;;;30494:21:17;:5;-1:-1:-1;;;;;30494:21:17;;30490:769;;;30676:85;30701:4;:18;;;30721:12;30735:4;:25;;;30676:24;:85::i;:::-;30647:25;;;30640:121;;-1:-1:-1;30791:18:17;30783:4;:26;;;;;;;;;30779:104;;-1:-1:-1;30841:16:17;;-1:-1:-1;30859:1:17;;-1:-1:-1;30859:1:17;;-1:-1:-1;30833:31:17;;-1:-1:-1;;;;;30833:31:17;30779:104;31040:83;31065:4;:16;;;31083:12;31097:4;:25;;;31040:24;:83::i;:::-;31011:25;;;31004:119;;-1:-1:-1;31153:18:17;31145:4;:26;;;;;;;;;31141:104;;-1:-1:-1;31203:16:17;;-1:-1:-1;31221:1:17;;-1:-1:-1;31221:1:17;;-1:-1:-1;31195:31:17;;-1:-1:-1;;;;;31195:31:17;31141:104;-1:-1:-1;28577:3:17;;28541:2728;;;-1:-1:-1;31375:25:17;;;;31354:18;;:46;31350:256;;;-1:-1:-1;;;31461:25:17;;;;31440:18;;31424:14;;-1:-1:-1;31440:46:17;;-1:-1:-1;31424:14:17;;-1:-1:-1;31416:74:17;;31350:256;-1:-1:-1;;31576:18:17;;31548:25;;;;;31529:14;;-1:-1:-1;31529:14:17;;-1:-1:-1;31548:46:17;;;;;-1:-1:-1;31521:74:17;;-1:-1:-1;31521:74:17;49889:1036;-1:-1:-1;;;;;50032:23:17;;49994:35;50032:23;;;:15;:23;;;;;50065:25;;:::i;:::-;-1:-1:-1;50093:37:17;;;;;;;;;50111:17;;-1:-1:-1;;;;;50111:17:17;50093:37;;50140:27;;:::i;:::-;-1:-1:-1;50170:55:17;;;;;;;;;-1:-1:-1;;;;;50188:25:17;;;-1:-1:-1;50188:25:17;;;:17;:25;;;;;:35;;;;;;;;;;;;;;50170:55;;50273:20;;50235:35;;;;;;:58;;;;50308:22;;:27;:55;;;;-1:-1:-1;50339:20:17;;:24;;50308:55;50304:127;;;2895:4;50379:41;;50304:127;50441:24;;:::i;:::-;50468:32;50473:11;50486:13;50468:4;:32::i;:::-;50441:59;;50510:19;50539:6;-1:-1:-1;;;;;50532:24:17;;50557:8;50532:34;;;;;;;;;;;;;-1:-1:-1;;;;;50532:34:17;-1:-1:-1;;;;;50532:34:17;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;50532:34:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;50532:34:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;50532:34:17;;-1:-1:-1;50576:18:17;50597:32;50532:34;50618:10;50597:4;:32::i;:::-;-1:-1:-1;;;;;50667:21:17;;50639:20;50667:21;;;:11;:21;;;;;;50576:53;;-1:-1:-1;50639:20:17;50662:42;;50576:53;50662:4;:42::i;:::-;50639:65;;50738:79;50751:8;50761:15;50778:13;:38;;2785:8;50778:38;;50738:79;-1:-1:-1;;;;;50714:21:17;;;;;;;:11;:21;;;;;;;;;:103;;;;50897:20;;50832:86;;;;;;;;;;;50714:21;;50832:86;;;;;;;;;;;;;;;49889:1036;;;;;;;;;;:::o;26125:185::-;26202:5;26209:4;26215;26238:65;26278:7;26294:1;26298;26301;26238:39;:65::i;:::-;26231:72;;;;;;26125:185;;;;;:::o;2536:306:25:-;2613:9;2624:4;2641:13;2656:18;;:::i;:::-;2678:20;2688:1;2691:6;2678:9;:20::i;:::-;2640:58;;-1:-1:-1;2640:58:25;-1:-1:-1;2719:18:25;2712:3;:25;;;;;;;;;2708:71;;-1:-1:-1;2761:3:25;-1:-1:-1;2766:1:25;;-1:-1:-1;2753:15:25;;2708:71;2797:18;2817:17;2826:7;2817:8;:17::i;:::-;2789:46;;;;;;2536:306;;;;;;:::o;45542:146:17:-;45596:4;45633:5;;-1:-1:-1;;;;;45633:5:17;45619:10;:19;;:62;;-1:-1:-1;45656:25:17;;-1:-1:-1;;;;;45656:25:17;45642:10;:39;45619:62;45612:69;;45542:146;:::o;11673:851::-;-1:-1:-1;;;;;11801:15:17;;11780:4;11801:15;;;:7;:15;;;;;:24;;;11796:92;;11853:23;11848:29;;11796:92;-1:-1:-1;;;;;11996:15:17;;;;;;;:7;:15;;;;;;;;:43;;;;;:33;;;;:43;;;;;;11991:102;;12067:14;12062:20;;11991:102;12195:9;12208:14;12226:82;12266:8;12283:6;12292:12;12306:1;12226:39;:82::i;:::-;12194:114;;-1:-1:-1;12194:114:17;;-1:-1:-1;12329:14:17;;-1:-1:-1;12322:3:17;:21;;;;;;;;;12318:68;;12371:3;12366:9;;;;;;;12318:68;12399:13;;12395:85;;12440:28;12435:34;;5400:1144;-1:-1:-1;;;;;5527:24:17;;5480:5;5527:24;;;:7;:24;;;;;5567:21;;;;5562:132;;5660:23;5653:30;;;;;5562:132;-1:-1:-1;;;;;5708:40:17;;;;;;:30;;;:40;;;;;;;;:48;;:40;:48;5704:130;;;5809:14;5802:21;;;;;5704:130;5882:9;;-1:-1:-1;;;;;5848:23:17;;;;;;:13;:23;;;;;:30;:43;5844:140;;5952:21;5945:28;;;;;5844:140;-1:-1:-1;;;;;6365:40:17;;;;;;;:30;;;:40;;;;;;;;:47;;-1:-1:-1;;6365:47:17;6408:4;6365:47;;;;;;6422:13;:23;;;;;27:10:-1;;23:18;;;45:23;;6422:36:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;6422:36:17;;;;;;;6474:31;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6523:14:17;;5400:1144;-1:-1:-1;;;5400:1144:17:o;6180:148:25:-;6235:9;6246:10;;:::i;:::-;6275:46;6282:18;;;;;;;;6297:1;6282:18;;;6302;;;;;;;;6317:1;6302:18;;;6275:6;:46::i;:::-;6268:53;;;;6180:148;;;;;:::o;6932:144::-;6999:9;7010:10;;:::i;:::-;7046;;7058;;7039:30;;7046:10;7039:6;:30::i;55971:922:17:-;-1:-1:-1;;;;;56062:15:17;;56038:21;56062:15;;;:7;:15;;;;;56095;;;;:23;;:15;:23;56087:61;;;;;-1:-1:-1;;;56087:61:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;56166:15;;;;;;:24;56158:62;;;;;-1:-1:-1;;;56158:62:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;56231:15;;;:22;;-1:-1:-1;;56231:22:17;56249:4;56231:22;;;;;;56268:34;;;-1:-1:-1;;;;;56268:34:17;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;56317:23:17;;;;;;:15;:23;;;;;:29;-1:-1:-1;;;;;56317:29:17;:34;:72;;;;-1:-1:-1;;;;;;56355:23:17;;;;;;:15;:23;;;;;:29;-1:-1:-1;;;56355:29:17;;;;:34;56317:72;56313:282;;;56431:153;;;;;;;;2895:4;-1:-1:-1;;;;;56431:153:17;;;;;56513:56;56520:16;:14;:16::i;:::-;56513:56;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;56513:56:17;;;:6;:56::i;:::-;56431:153;;;;;;;-1:-1:-1;;;;;56405:23:17;;;;;;:15;:23;;;;;;;;:179;;;;;;;;;;;;-1:-1:-1;;;56405:179:17;-1:-1:-1;;;;;56405:179:17;;;-1:-1:-1;;;;;;56405:179:17;;;;;;;;;;;;;;56313:282;-1:-1:-1;;;;;56609:23:17;;;;;;:15;:23;;;;;:29;-1:-1:-1;;;;;56609:29:17;:34;:72;;;;-1:-1:-1;;;;;;56647:23:17;;;;;;:15;:23;;;;;:29;-1:-1:-1;;;56647:29:17;;;;:34;56609:72;56605:282;;;56723:153;;;;;;;;2895:4;-1:-1:-1;;;;;56723:153:17;;;;;56805:56;56812:16;:14;:16::i;56805:56::-;56723:153;;;;;;;-1:-1:-1;;;;;56697:23:17;;;;;;:15;:23;;;;;;;;:179;;;;;;;;;;;;-1:-1:-1;;;56697:179:17;-1:-1:-1;;;;;56697:179:17;;;-1:-1:-1;;;;;;56697:179:17;;;;;;;;;;;;;;55971:922;;:::o;2122:183:24:-;2207:4;2228:43;2241:3;2236:9;;;;;;;;2252:4;2247:10;;;;;;;;2228:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;2294:3;2289:9;;;;;;;9528:118:25;9581:4;9604:35;9609:1;9612;9604:35;;;;;;;;;;;;;-1:-1:-1;;;9604:35:25;;;:4;:35::i;11373:124::-;11432:4;11455:35;11460:17;11465:1;447:4;11460;:17::i;:::-;11479:10;;11455:4;:35::i;10693:120::-;10746:4;10769:37;10774:1;10777;10769:37;;;;;;;;;;;;;;;;;:4;:37::i;12245:145::-;12302:13;;:::i;:::-;12334:49;;;;;;;;12352:29;12357:20;12362:1;485:4;12357;:20::i;:::-;12379:1;12352:4;:29::i;8263:162::-;8339:7;8378:12;-1:-1:-1;;;8366:10:25;;8358:33;;;;-1:-1:-1;;;8358:33:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;8358:33:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8416:1:25;;8263:162;-1:-1:-1;;8263:162:25:o;8431:158::-;8506:6;8543:12;-1:-1:-1;;;8532:9:25;;8524:32;;;;-1:-1:-1;;;8524:32:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;9364:158:25;9435:13;;:::i;:::-;9467:48;;;;;;;;9485:28;9490:1;:10;;;9502:1;:10;;;9485:4;:28::i;10562:125::-;10624:4;485;10647:19;10652:1;10655;:10;;;10647:4;:19::i;8911:114::-;8964:4;8987:31;8992:1;8995;8987:31;;;;;;;;;;;;;-1:-1:-1;;;8987:31:25;;;:4;:31::i;52696:448:17:-;52784:4;52819:9;52804:11;:24;;:43;;;;;52846:1;52832:11;:15;52804:43;52800:310;;;52863:9;52880:16;:14;:16::i;:::-;52932:29;;;-1:-1:-1;;;52932:29:17;;52955:4;52932:29;;;;;;52863:34;;-1:-1:-1;52911:18:17;;-1:-1:-1;;;;;52932:14:17;;;;;:29;;;;;;;;;;;;;;:14;:29;;;5:2:-1;;;;30:1;27;20:12;5:2;52932:29:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;52932:29:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;52932:29:17;;-1:-1:-1;52979:28:17;;;52975:125;;53027:4;-1:-1:-1;;;;;53027:13:17;;53041:4;53047:11;53027:32;;;;;;;;;;;;;-1:-1:-1;;;;;53027:32:17;-1:-1:-1;;;;;53027:32:17;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;53027:32:17;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;53027:32:17;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;53084:1:17;;-1:-1:-1;53077:8:17;;-1:-1:-1;;;53077:8:17;52975:125;52800:310;;;-1:-1:-1;53126:11:17;;52696:448;-1:-1:-1;;52696:448:17:o;11968:111:25:-;12021:4;12044:28;12049:1;12052;12044:28;;;;;;;;;;;;;-1:-1:-1;;;12044:28:25;;;:4;:28::i;6422:278::-;6504:9;6515:10;;:::i;:::-;6538:13;6553;;:::i;:::-;6570:12;6577:1;6580;6570:6;:12::i;:::-;6537:45;;-1:-1:-1;6537:45:25;-1:-1:-1;6603:18:25;6596:3;:25;;;;;;;;;6592:72;;6645:3;;-1:-1:-1;6650:2:25;-1:-1:-1;6637:16:25;;6592:72;6680:13;6687:2;6691:1;6680:6;:13::i;:::-;6673:20;;;;;;6422:278;;;;;;:::o;2982:321::-;3079:9;3090:4;3107:13;3122:18;;:::i;:::-;3144:20;3154:1;3157:6;3144:9;:20::i;:::-;3106:58;;-1:-1:-1;3106:58:25;-1:-1:-1;3185:18:25;3178:3;:25;;;;;;;;;3174:71;;-1:-1:-1;3227:3:25;-1:-1:-1;3232:1:25;;-1:-1:-1;3219:15:25;;3174:71;3262:34;3270:17;3279:7;3270:8;:17::i;:::-;3289:6;3262:7;:34::i;2082:346::-;2151:9;2162:10;;:::i;:::-;2185:14;2201:19;2224:27;2232:1;:10;;;2244:6;2224:7;:27::i;:::-;2184:67;;-1:-1:-1;2184:67:25;-1:-1:-1;2273:18:25;2265:4;:26;;;;;;;;;2261:90;;-1:-1:-1;2321:18:25;;;;;;;;;-1:-1:-1;2321:18:25;;2315:4;;-1:-1:-1;2321:18:25;-1:-1:-1;2307:33:25;;2261:90;2389:31;;;;;;;;;;;;-1:-1:-1;;2389:31:25;;-1:-1:-1;2082:346:25;-1:-1:-1;;;;2082:346:25:o;7228:210::-;7408:12;447:4;7408:23;;;7228:210::o;4950:1116::-;5017:9;5028:10;;:::i;:::-;5052:14;5068:24;5096:31;5104:1;:10;;;5116:1;:10;;;5096:7;:31::i;:::-;5051:76;;-1:-1:-1;5051:76:25;-1:-1:-1;5149:18:25;5141:4;:26;;;;;;;;;5137:90;;-1:-1:-1;5197:18:25;;;;;;;;;-1:-1:-1;5197:18:25;;5191:4;;-1:-1:-1;5197:18:25;-1:-1:-1;5183:33:25;;5137:90;5539:14;;5596:42;524:10;5618:19;5596:7;:42::i;:::-;5538:100;;-1:-1:-1;5538:100:25;-1:-1:-1;5660:18:25;5652:4;:26;;;;;;;;;5648:90;;-1:-1:-1;5708:18:25;;;;;;;;;-1:-1:-1;5708:18:25;;5702:4;;-1:-1:-1;5708:18:25;-1:-1:-1;5694:33:25;;-1:-1:-1;;5694:33:25;5648:90;5749:14;5765:12;5781:51;5789:32;447:4;5781:7;:51::i;:::-;5748:84;;-1:-1:-1;5748:84:25;-1:-1:-1;5976:18:25;5968:4;:26;;;;;;;;;5961:34;;;;6034:24;;;;;;;;;;;;-1:-1:-1;;6034:24:25;;-1:-1:-1;4950:1116:25;-1:-1:-1;;;;;;;;4950:1116:25:o;876:503::-;937:9;948:10;;:::i;:::-;971:14;987:20;1011:22;1019:3;447:4;1011:7;:22::i;:::-;970:63;;-1:-1:-1;970:63:25;-1:-1:-1;1055:18:25;1047:4;:26;;;;;;;;;1043:90;;-1:-1:-1;1103:18:25;;;;;;;;;-1:-1:-1;1103:18:25;;1097:4;;-1:-1:-1;1103:18:25;-1:-1:-1;1089:33:25;;1043:90;1144:14;1160:13;1177:31;1185:15;1202:5;1177:7;:31::i;:::-;1143:65;;-1:-1:-1;1143:65:25;-1:-1:-1;1230:18:25;1222:4;:26;;;;;;;;;1218:90;;-1:-1:-1;1278:18:25;;;;;;;;;-1:-1:-1;1278:18:25;;1272:4;;-1:-1:-1;1278:18:25;-1:-1:-1;1264:33:25;;-1:-1:-1;;1264:33:25;1218:90;1346:25;;;;;;;;;;;;-1:-1:-1;;1346:25:25;;-1:-1:-1;876:503:25;-1:-1:-1;;;;;;876:503:25:o;9652:155::-;9733:4;9765:12;9757:6;;;;9749:29;;;;-1:-1:-1;;;9749:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;9749:29:25;-1:-1:-1;;;9795:5:25;;;9652:155::o;10819:243::-;10900:4;10920:6;;;:16;;-1:-1:-1;10930:6:25;;10920:16;10916:55;;;-1:-1:-1;10959:1:25;10952:8;;10916:55;10989:5;;;10993:1;10989;:5;:1;11012:5;;;;;:10;11024:12;11004:33;;;;;-1:-1:-1;;;11004:33:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;11004:33:25;-1:-1:-1;11054:1:25;10819:243;-1:-1:-1;;;;10819:243:25:o;9031:175::-;9112:4;9137:5;;;9168:12;9160:6;;;;9152:29;;;;-1:-1:-1;;;9152:29:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12085:154:25;12166:4;12197:12;12190:5;12182:28;;;;-1:-1:-1;;;12182:28:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27:10:-1;;8:100;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;12182:28:25;;12231:1;12227;:5;;;;;;;12085:154;-1:-1:-1;;;;12085:154:25:o;1613:250:16:-;1669:9;;1705:5;;;1725:6;;;1721:136;;1755:18;;-1:-1:-1;1775:1:16;-1:-1:-1;1747:30:16;;1721:136;-1:-1:-1;1816:26:16;;-1:-1:-1;1844:1:16;;-1:-1:-1;1808:38:16;;543:331;599:9;;630:6;626:67;;-1:-1:-1;660:18:16;;-1:-1:-1;660:18:16;652:30;;626:67;712:5;;;716:1;712;:5;:1;732:5;;;;;:10;728:140;;-1:-1:-1;766:26:16;;-1:-1:-1;794:1:16;;-1:-1:-1;758:38:16;;728:140;835:18;;-1:-1:-1;855:1:16;-1:-1:-1;827:30:16;;964:209;1020:9;;1051:6;1047:75;;-1:-1:-1;1081:26:16;;-1:-1:-1;1109:1:16;1073:38;;1047:75;1140:18;1164:1;1160;:5;;;;;;1132:34;;;;964:209;;;;;:::o;69:572:42:-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity ^0.5.14;\n\nimport \"../../contracts/Comptroller.sol\";\n\ncontract ComptrollerScenario2 is Comptroller {\n    uint public blockNumber;\n\n    constructor() Comptroller() public {}\n\n    function fastForward(uint blocks) public returns (uint) {\n        blockNumber += blocks;\n        return blockNumber;\n    }\n\n    function setBlockNumber(uint number) public {\n        blockNumber = number;\n    }\n\n    function membershipLength(CToken cToken) public view returns (uint) {\n        return accountAssets[address(cToken)].length;\n    }\n\n    function unlist(CToken cToken) public {\n        markets[address(cToken)].isListed = false;\n    }\n}\n",
  "sourcePath": "/Users/yanyichun/project/Savings/contracts/compound/test/Contracts/ComptrollerScenario.sol",
  "ast": {
    "absolutePath": "/Users/yanyichun/project/Savings/contracts/compound/test/Contracts/ComptrollerScenario.sol",
    "exportedSymbols": {
      "ComptrollerScenario2": [
        30476
      ]
    },
    "id": 30477,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 30410,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:42"
      },
      {
        "absolutePath": "/Users/yanyichun/project/Savings/contracts/compound/contracts/Comptroller.sol",
        "file": "../../contracts/Comptroller.sol",
        "id": 30411,
        "nodeType": "ImportDirective",
        "scope": 30477,
        "sourceUnit": 15294,
        "src": "26:41:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 30412,
              "name": "Comptroller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15293,
              "src": "102:11:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Comptroller_$15293",
                "typeString": "contract Comptroller"
              }
            },
            "id": 30413,
            "nodeType": "InheritanceSpecifier",
            "src": "102:11:42"
          }
        ],
        "contractDependencies": [
          11460,
          15293,
          20155,
          20168,
          20184,
          20220,
          20261,
          20511,
          21834
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 30476,
        "linearizedBaseContracts": [
          30476,
          15293,
          21834,
          11460,
          20511,
          20155,
          20261,
          20220,
          20184,
          20168
        ],
        "name": "ComptrollerScenario2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 30415,
            "name": "blockNumber",
            "nodeType": "VariableDeclaration",
            "scope": 30476,
            "src": "120:23:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30414,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "120:4:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30420,
              "nodeType": "Block",
              "src": "185:2:42",
              "statements": []
            },
            "documentation": null,
            "id": 30421,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 30418,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 30417,
                  "name": "Comptroller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15293,
                  "src": "164:11:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Comptroller_$15293_$",
                    "typeString": "type(contract Comptroller)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "164:13:42"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:2:42"
            },
            "returnParameters": {
              "id": 30419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "185:0:42"
            },
            "scope": 30476,
            "src": "150:37:42",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30434,
              "nodeType": "Block",
              "src": "249:66:42",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30428,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30415,
                      "src": "259:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 30429,
                      "name": "blocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30423,
                      "src": "274:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "259:21:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30431,
                  "nodeType": "ExpressionStatement",
                  "src": "259:21:42"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30432,
                    "name": "blockNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30415,
                    "src": "297:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30427,
                  "id": 30433,
                  "nodeType": "Return",
                  "src": "290:18:42"
                }
              ]
            },
            "documentation": null,
            "id": 30435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fastForward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30423,
                  "name": "blocks",
                  "nodeType": "VariableDeclaration",
                  "scope": 30435,
                  "src": "214:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30422,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "214:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "213:13:42"
            },
            "returnParameters": {
              "id": 30427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30426,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 30435,
                  "src": "243:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30425,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:6:42"
            },
            "scope": 30476,
            "src": "193:122:42",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30444,
              "nodeType": "Block",
              "src": "365:37:42",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30440,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30415,
                      "src": "375:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 30441,
                      "name": "number",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30437,
                      "src": "389:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "375:20:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30443,
                  "nodeType": "ExpressionStatement",
                  "src": "375:20:42"
                }
              ]
            },
            "documentation": null,
            "id": 30445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBlockNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30437,
                  "name": "number",
                  "nodeType": "VariableDeclaration",
                  "scope": 30445,
                  "src": "345:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30436,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "344:13:42"
            },
            "returnParameters": {
              "id": 30439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:0:42"
            },
            "scope": 30476,
            "src": "321:81:42",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30459,
              "nodeType": "Block",
              "src": "476:61:42",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 30452,
                        "name": "accountAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20183,
                        "src": "493:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_CToken_$10814_$dyn_storage_$",
                          "typeString": "mapping(address => contract CToken[] storage ref)"
                        }
                      },
                      "id": 30456,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 30454,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30447,
                            "src": "515:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CToken_$10814",
                              "typeString": "contract CToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CToken_$10814",
                              "typeString": "contract CToken"
                            }
                          ],
                          "id": 30453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "507:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 30455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "507:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "493:30:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_CToken_$10814_$dyn_storage",
                        "typeString": "contract CToken[] storage ref"
                      }
                    },
                    "id": 30457,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "493:37:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30451,
                  "id": 30458,
                  "nodeType": "Return",
                  "src": "486:44:42"
                }
              ]
            },
            "documentation": null,
            "id": 30460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "membershipLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30447,
                  "name": "cToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 30460,
                  "src": "434:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$10814",
                    "typeString": "contract CToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 30446,
                    "name": "CToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10814,
                    "src": "434:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CToken_$10814",
                      "typeString": "contract CToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:15:42"
            },
            "returnParameters": {
              "id": 30451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30450,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 30460,
                  "src": "470:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:6:42"
            },
            "scope": 30476,
            "src": "408:129:42",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30474,
              "nodeType": "Block",
              "src": "581:58:42",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 30465,
                          "name": "markets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20201,
                          "src": "591:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Market_$20197_storage_$",
                            "typeString": "mapping(address => struct ComptrollerV2Storage.Market storage ref)"
                          }
                        },
                        "id": 30469,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 30467,
                              "name": "cToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30462,
                              "src": "607:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CToken_$10814",
                                "typeString": "contract CToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CToken_$10814",
                                "typeString": "contract CToken"
                              }
                            ],
                            "id": 30466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "599:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 30468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "599:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "591:24:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$20197_storage",
                          "typeString": "struct ComptrollerV2Storage.Market storage ref"
                        }
                      },
                      "id": 30470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isListed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20188,
                      "src": "591:33:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 30471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "627:5:42",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "591:41:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30473,
                  "nodeType": "ExpressionStatement",
                  "src": "591:41:42"
                }
              ]
            },
            "documentation": null,
            "id": 30475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30462,
                  "name": "cToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 30475,
                  "src": "559:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$10814",
                    "typeString": "contract CToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 30461,
                    "name": "CToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10814,
                    "src": "559:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CToken_$10814",
                      "typeString": "contract CToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "558:15:42"
            },
            "returnParameters": {
              "id": 30464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:0:42"
            },
            "scope": 30476,
            "src": "543:96:42",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 30477,
        "src": "69:572:42"
      }
    ],
    "src": "0:642:42"
  },
  "legacyAST": {
    "absolutePath": "/Users/yanyichun/project/Savings/contracts/compound/test/Contracts/ComptrollerScenario.sol",
    "exportedSymbols": {
      "ComptrollerScenario2": [
        30476
      ]
    },
    "id": 30477,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 30410,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".14"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:42"
      },
      {
        "absolutePath": "/Users/yanyichun/project/Savings/contracts/compound/contracts/Comptroller.sol",
        "file": "../../contracts/Comptroller.sol",
        "id": 30411,
        "nodeType": "ImportDirective",
        "scope": 30477,
        "sourceUnit": 15294,
        "src": "26:41:42",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 30412,
              "name": "Comptroller",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15293,
              "src": "102:11:42",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Comptroller_$15293",
                "typeString": "contract Comptroller"
              }
            },
            "id": 30413,
            "nodeType": "InheritanceSpecifier",
            "src": "102:11:42"
          }
        ],
        "contractDependencies": [
          11460,
          15293,
          20155,
          20168,
          20184,
          20220,
          20261,
          20511,
          21834
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 30476,
        "linearizedBaseContracts": [
          30476,
          15293,
          21834,
          11460,
          20511,
          20155,
          20261,
          20220,
          20184,
          20168
        ],
        "name": "ComptrollerScenario2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 30415,
            "name": "blockNumber",
            "nodeType": "VariableDeclaration",
            "scope": 30476,
            "src": "120:23:42",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 30414,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "120:4:42",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30420,
              "nodeType": "Block",
              "src": "185:2:42",
              "statements": []
            },
            "documentation": null,
            "id": 30421,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 30418,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 30417,
                  "name": "Comptroller",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 15293,
                  "src": "164:11:42",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Comptroller_$15293_$",
                    "typeString": "type(contract Comptroller)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "164:13:42"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "161:2:42"
            },
            "returnParameters": {
              "id": 30419,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "185:0:42"
            },
            "scope": 30476,
            "src": "150:37:42",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30434,
              "nodeType": "Block",
              "src": "249:66:42",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30428,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30415,
                      "src": "259:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 30429,
                      "name": "blocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30423,
                      "src": "274:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "259:21:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30431,
                  "nodeType": "ExpressionStatement",
                  "src": "259:21:42"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30432,
                    "name": "blockNumber",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30415,
                    "src": "297:11:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30427,
                  "id": 30433,
                  "nodeType": "Return",
                  "src": "290:18:42"
                }
              ]
            },
            "documentation": null,
            "id": 30435,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fastForward",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30424,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30423,
                  "name": "blocks",
                  "nodeType": "VariableDeclaration",
                  "scope": 30435,
                  "src": "214:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30422,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "214:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "213:13:42"
            },
            "returnParameters": {
              "id": 30427,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30426,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 30435,
                  "src": "243:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30425,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "242:6:42"
            },
            "scope": 30476,
            "src": "193:122:42",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30444,
              "nodeType": "Block",
              "src": "365:37:42",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30440,
                      "name": "blockNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30415,
                      "src": "375:11:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 30441,
                      "name": "number",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30437,
                      "src": "389:6:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "375:20:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 30443,
                  "nodeType": "ExpressionStatement",
                  "src": "375:20:42"
                }
              ]
            },
            "documentation": null,
            "id": 30445,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setBlockNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30438,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30437,
                  "name": "number",
                  "nodeType": "VariableDeclaration",
                  "scope": 30445,
                  "src": "345:11:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30436,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "345:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "344:13:42"
            },
            "returnParameters": {
              "id": 30439,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "365:0:42"
            },
            "scope": 30476,
            "src": "321:81:42",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30459,
              "nodeType": "Block",
              "src": "476:61:42",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 30452,
                        "name": "accountAssets",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20183,
                        "src": "493:13:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_CToken_$10814_$dyn_storage_$",
                          "typeString": "mapping(address => contract CToken[] storage ref)"
                        }
                      },
                      "id": 30456,
                      "indexExpression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 30454,
                            "name": "cToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30447,
                            "src": "515:6:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CToken_$10814",
                              "typeString": "contract CToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CToken_$10814",
                              "typeString": "contract CToken"
                            }
                          ],
                          "id": 30453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "507:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 30455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "507:15:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "493:30:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_CToken_$10814_$dyn_storage",
                        "typeString": "contract CToken[] storage ref"
                      }
                    },
                    "id": 30457,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": null,
                    "src": "493:37:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 30451,
                  "id": 30458,
                  "nodeType": "Return",
                  "src": "486:44:42"
                }
              ]
            },
            "documentation": null,
            "id": 30460,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "membershipLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30448,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30447,
                  "name": "cToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 30460,
                  "src": "434:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$10814",
                    "typeString": "contract CToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 30446,
                    "name": "CToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10814,
                    "src": "434:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CToken_$10814",
                      "typeString": "contract CToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "433:15:42"
            },
            "returnParameters": {
              "id": 30451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30450,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 30460,
                  "src": "470:4:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 30449,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "470:4:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "469:6:42"
            },
            "scope": 30476,
            "src": "408:129:42",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 30474,
              "nodeType": "Block",
              "src": "581:58:42",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 30472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 30465,
                          "name": "markets",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20201,
                          "src": "591:7:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Market_$20197_storage_$",
                            "typeString": "mapping(address => struct ComptrollerV2Storage.Market storage ref)"
                          }
                        },
                        "id": 30469,
                        "indexExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 30467,
                              "name": "cToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30462,
                              "src": "607:6:42",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CToken_$10814",
                                "typeString": "contract CToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CToken_$10814",
                                "typeString": "contract CToken"
                              }
                            ],
                            "id": 30466,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "599:7:42",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 30468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "599:15:42",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "591:24:42",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Market_$20197_storage",
                          "typeString": "struct ComptrollerV2Storage.Market storage ref"
                        }
                      },
                      "id": 30470,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "isListed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20188,
                      "src": "591:33:42",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 30471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "627:5:42",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "591:41:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30473,
                  "nodeType": "ExpressionStatement",
                  "src": "591:41:42"
                }
              ]
            },
            "documentation": null,
            "id": 30475,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unlist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 30463,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30462,
                  "name": "cToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 30475,
                  "src": "559:13:42",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CToken_$10814",
                    "typeString": "contract CToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 30461,
                    "name": "CToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 10814,
                    "src": "559:6:42",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CToken_$10814",
                      "typeString": "contract CToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "558:15:42"
            },
            "returnParameters": {
              "id": 30464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:0:42"
            },
            "scope": 30476,
            "src": "543:96:42",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 30477,
        "src": "69:572:42"
      }
    ],
    "src": "0:642:42"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.14+commit.01f1aaa4.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.2.3",
  "updatedAt": "2021-02-25T05:55:40.991Z",
  "devdoc": {
    "methods": {
      "_addCompMarkets(address[])": {
        "params": {
          "cTokens": "The addresses of the markets to add"
        }
      },
      "_dropCompMarket(address)": {
        "params": {
          "cToken": "The address of the market to drop"
        }
      },
      "_setCloseFactor(uint256)": {
        "details": "Admin function to set closeFactor",
        "params": {
          "newCloseFactorMantissa": "New close factor, scaled by 1e18"
        },
        "return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
      },
      "_setCollateralFactor(address,uint256)": {
        "details": "Admin function to set per-market collateralFactor",
        "params": {
          "cToken": "The market to set the factor on",
          "newCollateralFactorMantissa": "The new collateral factor, scaled by 1e18"
        },
        "return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
      },
      "_setCompRate(uint256)": {
        "params": {
          "compRate_": "The amount of COMP wei per block to distribute"
        }
      },
      "_setLiquidationIncentive(uint256)": {
        "details": "Admin function to set liquidationIncentive",
        "params": {
          "newLiquidationIncentiveMantissa": "New liquidationIncentive scaled by 1e18"
        },
        "return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
      },
      "_setMaxAssets(uint256)": {
        "details": "Admin function to set maxAssets",
        "params": {
          "newMaxAssets": "New max assets"
        },
        "return": "uint 0=success, otherwise a failure. (See ErrorReporter for details)"
      },
      "_setPauseGuardian(address)": {
        "params": {
          "newPauseGuardian": "The address of the new Pause Guardian"
        },
        "return": "uint 0=success, otherwise a failure. (See enum Error for details)"
      },
      "_setPriceOracle(address)": {
        "details": "Admin function to set a new price oracle",
        "return": "uint 0=success, otherwise a failure (see ErrorReporter.sol for details)"
      },
      "_supportMarket(address)": {
        "details": "Admin function to set isListed and add support for the market",
        "params": {
          "cToken": "The address of the market (token) to list"
        },
        "return": "uint 0=success, otherwise a failure. (See enum Error for details)"
      },
      "borrowAllowed(address,address,uint256)": {
        "params": {
          "borrowAmount": "The amount of underlying the account would borrow",
          "borrower": "The account which would borrow the asset",
          "cToken": "The market to verify the borrow against"
        },
        "return": "0 if the borrow is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
      },
      "borrowVerify(address,address,uint256)": {
        "params": {
          "borrowAmount": "The amount of the underlying asset requested to borrow",
          "borrower": "The address borrowing the underlying",
          "cToken": "Asset whose underlying is being borrowed"
        }
      },
      "checkMembership(address,address)": {
        "params": {
          "account": "The address of the account to check",
          "cToken": "The cToken to check"
        },
        "return": "True if the account is in the asset, otherwise false."
      },
      "claimComp(address)": {
        "params": {
          "holder": "The address to claim COMP for"
        }
      },
      "claimComp(address,address[])": {
        "params": {
          "cTokens": "The list of markets to claim COMP in",
          "holder": "The address to claim COMP for"
        }
      },
      "claimComp(address[],address[],bool,bool)": {
        "params": {
          "borrowers": "Whether or not to claim COMP earned by borrowing",
          "cTokens": "The list of markets to claim COMP in",
          "holders": "The addresses to claim COMP for",
          "suppliers": "Whether or not to claim COMP earned by supplying"
        }
      },
      "enterMarkets(address[])": {
        "params": {
          "cTokens": "The list of addresses of the cToken markets to be enabled"
        },
        "return": "Success indicator for whether each corresponding market was entered"
      },
      "exitMarket(address)": {
        "details": "Sender must not have an outstanding borrow balance in the asset, or be providing neccessary collateral for an outstanding borrow.",
        "params": {
          "cTokenAddress": "The address of the asset to be removed"
        },
        "return": "Whether or not the account successfully exited the market"
      },
      "getAccountLiquidity(address)": {
        "return": "(possible error code (semi-opaque), account liquidity in excess of collateral requirements,         account shortfall below collateral requirements)"
      },
      "getAllMarkets()": {
        "details": "The automatic getter may be used to access an individual market.",
        "return": "The list of market addresses"
      },
      "getAssetsIn(address)": {
        "params": {
          "account": "The address of the account to pull assets for"
        },
        "return": "A dynamic list with the assets the account has entered"
      },
      "getCompAddress()": {
        "return": "The address of COMP"
      },
      "getHypotheticalAccountLiquidity(address,address,uint256,uint256)": {
        "params": {
          "account": "The account to determine liquidity for",
          "borrowAmount": "The amount of underlying to hypothetically borrow",
          "cTokenModify": "The market to hypothetically redeem/borrow in",
          "redeemTokens": "The number of tokens to hypothetically redeem"
        },
        "return": "(possible error code (semi-opaque), hypothetical account liquidity in excess of collateral requirements,         hypothetical account shortfall below collateral requirements)"
      },
      "liquidateBorrowAllowed(address,address,address,address,uint256)": {
        "params": {
          "borrower": "The address of the borrower",
          "cTokenBorrowed": "Asset which was borrowed by the borrower",
          "cTokenCollateral": "Asset which was used as collateral and will be seized",
          "liquidator": "The address repaying the borrow and seizing the collateral",
          "repayAmount": "The amount of underlying being repaid"
        }
      },
      "liquidateBorrowVerify(address,address,address,address,uint256,uint256)": {
        "params": {
          "actualRepayAmount": "The amount of underlying being repaid",
          "borrower": "The address of the borrower",
          "cTokenBorrowed": "Asset which was borrowed by the borrower",
          "cTokenCollateral": "Asset which was used as collateral and will be seized",
          "liquidator": "The address repaying the borrow and seizing the collateral"
        }
      },
      "liquidateCalculateSeizeTokens(address,address,uint256)": {
        "details": "Used in liquidation (called in cToken.liquidateBorrowFresh)",
        "params": {
          "actualRepayAmount": "The amount of cTokenBorrowed underlying to convert into cTokenCollateral tokens",
          "cTokenBorrowed": "The address of the borrowed cToken",
          "cTokenCollateral": "The address of the collateral cToken"
        },
        "return": "(errorCode, number of cTokenCollateral tokens to be seized in a liquidation)"
      },
      "mintAllowed(address,address,uint256)": {
        "params": {
          "cToken": "The market to verify the mint against",
          "mintAmount": "The amount of underlying being supplied to the market in exchange for tokens",
          "minter": "The account which would get the minted tokens"
        },
        "return": "0 if the mint is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
      },
      "mintVerify(address,address,uint256,uint256)": {
        "params": {
          "actualMintAmount": "The amount of the underlying asset being minted",
          "cToken": "Asset being minted",
          "mintTokens": "The number of tokens being minted",
          "minter": "The address minting the tokens"
        }
      },
      "redeemAllowed(address,address,uint256)": {
        "params": {
          "cToken": "The market to verify the redeem against",
          "redeemTokens": "The number of cTokens to exchange for the underlying asset in the market",
          "redeemer": "The account which would redeem the tokens"
        },
        "return": "0 if the redeem is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
      },
      "redeemVerify(address,address,uint256,uint256)": {
        "params": {
          "cToken": "Asset being redeemed",
          "redeemAmount": "The amount of the underlying asset being redeemed",
          "redeemTokens": "The number of tokens being redeemed",
          "redeemer": "The address redeeming the tokens"
        }
      },
      "repayBorrowAllowed(address,address,address,uint256)": {
        "params": {
          "borrower": "The account which would borrowed the asset",
          "cToken": "The market to verify the repay against",
          "payer": "The account which would repay the asset",
          "repayAmount": "The amount of the underlying asset the account would repay"
        },
        "return": "0 if the repay is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
      },
      "repayBorrowVerify(address,address,address,uint256,uint256)": {
        "params": {
          "actualRepayAmount": "The amount of underlying being repaid",
          "borrower": "The address of the borrower",
          "cToken": "Asset being repaid",
          "payer": "The address repaying the borrow"
        }
      },
      "seizeAllowed(address,address,address,address,uint256)": {
        "params": {
          "borrower": "The address of the borrower",
          "cTokenBorrowed": "Asset which was borrowed by the borrower",
          "cTokenCollateral": "Asset which was used as collateral and will be seized",
          "liquidator": "The address repaying the borrow and seizing the collateral",
          "seizeTokens": "The number of collateral tokens to seize"
        }
      },
      "seizeVerify(address,address,address,address,uint256)": {
        "params": {
          "borrower": "The address of the borrower",
          "cTokenBorrowed": "Asset which was borrowed by the borrower",
          "cTokenCollateral": "Asset which was used as collateral and will be seized",
          "liquidator": "The address repaying the borrow and seizing the collateral",
          "seizeTokens": "The number of collateral tokens to seize"
        }
      },
      "transferAllowed(address,address,address,uint256)": {
        "params": {
          "cToken": "The market to verify the transfer against",
          "dst": "The account which receives the tokens",
          "src": "The account which sources the tokens",
          "transferTokens": "The number of cTokens to transfer"
        },
        "return": "0 if the transfer is allowed, otherwise a semi-opaque error code (See ErrorReporter.sol)"
      },
      "transferVerify(address,address,address,uint256)": {
        "params": {
          "cToken": "Asset being transferred",
          "dst": "The account which receives the tokens",
          "src": "The account which sources the tokens",
          "transferTokens": "The number of cTokens to transfer"
        }
      }
    }
  },
  "userdoc": {
    "methods": {
      "_addCompMarkets(address[])": {
        "notice": "Add markets to compMarkets, allowing them to earn COMP in the flywheel"
      },
      "_dropCompMarket(address)": {
        "notice": "Remove a market from compMarkets, preventing it from earning COMP in the flywheel"
      },
      "_setCloseFactor(uint256)": {
        "notice": "Sets the closeFactor used when liquidating borrows"
      },
      "_setCollateralFactor(address,uint256)": {
        "notice": "Sets the collateralFactor for a market"
      },
      "_setCompRate(uint256)": {
        "notice": "Set the amount of COMP distributed per block"
      },
      "_setLiquidationIncentive(uint256)": {
        "notice": "Sets liquidationIncentive"
      },
      "_setMaxAssets(uint256)": {
        "notice": "Sets maxAssets which controls how many markets can be entered"
      },
      "_setPauseGuardian(address)": {
        "notice": "Admin function to change the Pause Guardian"
      },
      "_setPriceOracle(address)": {
        "notice": "Sets a new price oracle for the comptroller"
      },
      "_supportMarket(address)": {
        "notice": "Add the market to the markets mapping and set it as listed"
      },
      "borrowAllowed(address,address,uint256)": {
        "notice": "Checks if the account should be allowed to borrow the underlying asset of the given market"
      },
      "borrowVerify(address,address,uint256)": {
        "notice": "Validates borrow and reverts on rejection. May emit logs."
      },
      "checkMembership(address,address)": {
        "notice": "Returns whether the given account is entered in the given asset"
      },
      "claimComp(address)": {
        "notice": "Claim all the comp accrued by holder in all markets"
      },
      "claimComp(address,address[])": {
        "notice": "Claim all the comp accrued by holder in the specified markets"
      },
      "claimComp(address[],address[],bool,bool)": {
        "notice": "Claim all comp accrued by the holders"
      },
      "enterMarkets(address[])": {
        "notice": "Add assets to be included in account liquidity calculation"
      },
      "exitMarket(address)": {
        "notice": "Removes asset from sender's account liquidity calculation"
      },
      "getAccountLiquidity(address)": {
        "notice": "Determine the current account liquidity wrt collateral requirements"
      },
      "getAllMarkets()": {
        "notice": "Return all of the markets"
      },
      "getAssetsIn(address)": {
        "notice": "Returns the assets an account has entered"
      },
      "getCompAddress()": {
        "notice": "Return the address of the COMP token"
      },
      "getHypotheticalAccountLiquidity(address,address,uint256,uint256)": {
        "notice": "Determine what the account liquidity would be if the given amounts were redeemed/borrowed"
      },
      "liquidateBorrowAllowed(address,address,address,address,uint256)": {
        "notice": "Checks if the liquidation should be allowed to occur"
      },
      "liquidateBorrowVerify(address,address,address,address,uint256,uint256)": {
        "notice": "Validates liquidateBorrow and reverts on rejection. May emit logs."
      },
      "liquidateCalculateSeizeTokens(address,address,uint256)": {
        "notice": "Calculate number of tokens of collateral asset to seize given an underlying amount"
      },
      "mintAllowed(address,address,uint256)": {
        "notice": "Checks if the account should be allowed to mint tokens in the given market"
      },
      "mintVerify(address,address,uint256,uint256)": {
        "notice": "Validates mint and reverts on rejection. May emit logs."
      },
      "redeemAllowed(address,address,uint256)": {
        "notice": "Checks if the account should be allowed to redeem tokens in the given market"
      },
      "redeemVerify(address,address,uint256,uint256)": {
        "notice": "Validates redeem and reverts on rejection. May emit logs."
      },
      "refreshCompSpeeds()": {
        "notice": "Recalculate and update COMP speeds for all COMP markets"
      },
      "repayBorrowAllowed(address,address,address,uint256)": {
        "notice": "Checks if the account should be allowed to repay a borrow in the given market"
      },
      "repayBorrowVerify(address,address,address,uint256,uint256)": {
        "notice": "Validates repayBorrow and reverts on rejection. May emit logs."
      },
      "seizeAllowed(address,address,address,address,uint256)": {
        "notice": "Checks if the seizing of assets should be allowed to occur"
      },
      "seizeVerify(address,address,address,address,uint256)": {
        "notice": "Validates seize and reverts on rejection. May emit logs."
      },
      "transferAllowed(address,address,address,uint256)": {
        "notice": "Checks if the account should be allowed to transfer tokens in the given market"
      },
      "transferVerify(address,address,address,uint256)": {
        "notice": "Validates transfer and reverts on rejection. May emit logs."
      }
    }
  }
}